<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>江南一点雨</title>
  
  <subtitle>江南一点雨</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.javaboy.org/"/>
  <updated>2020-01-10T02:09:14.203Z</updated>
  <id>http://www.javaboy.org/</id>
  
  <author>
    <name>江南一点雨</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>天呐，世界上还有免费的域名，赶紧抢注一个压压惊</title>
    <link href="http://www.javaboy.org/2020/0110/free-domain.html"/>
    <id>http://www.javaboy.org/2020/0110/free-domain.html</id>
    <published>2020-01-10T01:26:39.000Z</published>
    <updated>2020-01-10T02:09:14.203Z</updated>
    
    <content type="html"><![CDATA[<p>你可能想不到，这世界上还有免费的顶级域名！虽然这不是什么大新闻，可是很多小伙伴可能还不知道。</p><a id="more"></a><p>前两天刚和大家聊了不花一分钱搭建个人博客的事情（<a href="https://mp.weixin.qq.com/s/P_n-Vz3h3dZiZ1xNWKHeTg" target="_blank" rel="noopener">不用花一分线，松哥手把手教你上线个人博客</a>）,在这篇文章中，你要真的一分钱都不想花，那就要接受 GitHub 提供的默认域名，GitHub 默认提供的域名是二级域名，这个默认的二级域名可能不太好记。</p><p>另一方面，有的时候大家做一些简单开发，想把自己的应用扔到服务器上去跑，这个时候，给服务器配置一个域名操作起来也会方便很多。so。。。</p><p>今天松哥再和大家透漏几个真正免费的顶级域名。虽然免费，但是注册过程还是挺麻烦的，不过好在不要钱，麻烦就麻烦吧。</p><p>为什么说注册过程麻烦呢？因为免费域名你要去网站上申请，要申请就要先网站上注册一个账户，就跟你去国内云服务厂商去买域名一样，购买之前你得先注册个账户。</p><p>这些免费域名麻烦就麻烦在注册账户非常麻烦，要注意的地方非常多，不过一个核心的指导思想就是你全程伪装成你在美帝（所以要全程开网络代理，并且代理服务器还要在美帝），否则的话，你会发现找不到注册链接，找不到购买按钮等等。</p><p>松哥亲测，虽然麻烦，但是只要你按照网上的步骤来，是可以申请成功的。</p><p>好了，废话不多说，下面我来介绍我们今天的四大主角：.ml 域名、.cf 域名、.ga 域名以及 .tk 域名。</p><h3 id="域名申请"><a href="#域名申请" class="headerlink" title="域名申请"></a>域名申请</h3><p>以 .ML 顶级域名为例，我们可以在 freenom 网站上进行申请。申请地址如下：</p><ul><li><a href="http://www.freenom.com/en/index.html" target="_blank" rel="noopener">http://www.freenom.com/en/index.html</a></li></ul><p>打开这个网站，我们首先会看到如下页面：</p><p><img src="http://www.javaboy.org/images/other/110-1.png" alt></p><p>然后在输入框中输入你要查询的域名，例如我这里是 javaboy：</p><p><img src="http://www.javaboy.org/images/other/110-2.png" alt></p><p>然后进入到购物车，选择右边的 12 个月免费期：</p><p><img src="http://www.javaboy.org/images/other/110-3.png" alt></p><p>选择完成后，点击 Continue 按钮进入到下一步：</p><p><img src="http://www.javaboy.org/images/other/110-4.png" alt></p><p>这里非常关键，地址信息要和你的代理服务器信息一致（如果你不知道代理服务器的具体地址，可以用 Google 随便搜索一个东西，拉到最下面，就有 IP 地址所属的位置），所有信息都用英文填写，涉及到地址，要真实可查，并且要有关联，例如你的 Address 和 Zip Code、City、Country 以及 State/Region 之间有必然关系，邮箱地址建议使用国外邮箱，手机号码可以随意填写。</p><p>购买完成后，在首页找到 My Domains ，就可以去配置 DNS 了。</p><p>另外三个申请步骤基本都差不多，要注意的事项也都差不多，只不过注册地址不一样罢了：</p><ul><li>.CF 申请地址：<a href="http://www.dot.cf" target="_blank" rel="noopener">http://www.dot.cf</a></li><li>.GA 申请地址：<a href="http://www.dot.ga" target="_blank" rel="noopener">http://www.dot.ga</a></li><li>.TK 申请地址：<a href="http://www.dot.tk" target="_blank" rel="noopener">http://www.dot.tk</a></li></ul><h3 id="域名介绍"><a href="#域名介绍" class="headerlink" title="域名介绍"></a>域名介绍</h3><p>接下来我也简单介绍一下这几个域名，为什么他们是免费的？</p><p>.ML 域名来自马里，中文有“美丽”之意，任何人都可以注册，没有任何限制，也不收取任何费用。<br>.CF 域名来自中非共和国，目前由(SOCATEL) 管理，由荷兰的 Freedom Registry 公司负责运作。<br>.GA 域名来自非洲国家加蓬。<br>.TK 域名算是一个老牌的域名了，据说目前活跃的域名超过 1600 万个，这里估计国人也贡献了不少。</p><p>这些比较奇特的顶级域名 Google 肯定会收录，百度暂不清楚。</p><p>最后，虽然这些域名不要钱，不过如果大家想正儿八经的搞一个自己的博客网站，松哥还是建议花几十块买一个 .com 域名，也不贵。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;你可能想不到，这世界上还有免费的顶级域名！虽然这不是什么大新闻，可是很多小伙伴可能还不知道。&lt;/p&gt;
    
    </summary>
    
      <category term="domain" scheme="http://www.javaboy.org/categories/domain/"/>
    
    
      <category term="domain" scheme="http://www.javaboy.org/tags/domain/"/>
    
  </entry>
  
  <entry>
    <title>MacBook Pro 入手一年了，到底香不香？</title>
    <link href="http://www.javaboy.org/2020/0108/mackbookpro.html"/>
    <id>http://www.javaboy.org/2020/0108/mackbookpro.html</id>
    <published>2020-01-08T01:26:24.000Z</published>
    <updated>2020-01-10T02:08:23.400Z</updated>
    
    <content type="html"><![CDATA[<p>最近又有小伙伴问到底值不值得入手一台 MacBook Pro，松哥自己在 2018 年 10 月份的时候入手了一台，到现在为止，也用了一年多了，今天就来和小伙伴们聊一聊使用感受，至于到底值不值，需要大家自行判断。</p><a id="more"></a><p>我的第一台笔记本是大一第二学期（2012 年 4 月份）入手的，是一台 Sony 的 VAIO，这台电脑现在也一直在用，给大家录制的视频教程都是用这台电脑录制了，在接近 8 年的时间里，这台笔记本一直是我的主力机，更重要的是从来没有拿去修过，质量很棒，因此当我想要换电脑的时候，首先考虑的还是 VAIO，可惜 Sony 在 2014 年将 PC 业务整体出售，VAIO 这个品牌也卖给了 JIP（Japan Industrial Partners Inc.），从此退出了笔记本电脑市场。</p><p>排除了 VAIO 之后，剩下的选项就是 MacBook Pro 了。其实很早就想入手一台 mbp 了，2016 年那会，刚毕业一年，薪水翻了三倍，我想入手一台 mbp 奖励自己，但后来还是控制住自己了，买了一个固态硬盘给我的 Windows 装上了，然后就把买 mbp 这个欲望压下来了。去年 10 月份的时候，我的第一本书刚刚交稿给出版社，还是蛮激动的，心想这下可以买一个 mbp 了吧，这次没能成功控制住自己，于是就买了，要买就买好的，于是我在 Apple 官网定制了一台 32G 内存的 mbp，当时还送了一个 beat solo 耳机。</p><p>耳机一直是女票在用，我就不多说了，我这次主要和大家说说作为一个程序员，我比较关注的开发工具的使用感受。</p><h2 id="idea-秒开"><a href="#idea-秒开" class="headerlink" title="idea 秒开"></a>idea 秒开</h2><p>第一次知道原来 IntelliJ IDEA 可以秒开。最早用 Windows 的时候，那会还不是固态硬盘，每天到公司后，先按下开机键，然后去打杯水，回来电脑刚好开机，然后点下 idea 图标，再去上个厕所，回来后 idea 也开好了，后来换了个固态硬盘，Windows 开机基本上可以控制在 10s 之内，所以每条到公司的流程也调整了下，先开机，然后等一会开机完成后，开 idea，然后再去打水，回来的时候 idea 就刚好开好。</p><p>用了 mbp 之后，idea 和 webstorm 这两个平时开发用的最多的软件，基本都可以秒开，相应的，idea 在项目编译运行的时候，也要快很多。这样开发效率提升可不是一丁半点。</p><h2 id="不用关机"><a href="#不用关机" class="headerlink" title="不用关机"></a>不用关机</h2><p>mbp 还有一个非常有用的地方就是不用关机，想想你做开发，idea、webstorm、vscode、sequel pro、postman、命令行等等开了一堆，现在下班了，全部关掉回家，明天来了再挨个打开，不是很费事么？mac 用完了，直接合上盖就可以了，下次再打开盖子，这些东西都还可以接着使用。不用再一个一个打开。</p><p>我刚开始用的时候，对这个功能很不习惯，每次用完还是习惯性的关机，后来时间久了，慢慢就接受了，现在我的 mbp 估计都快一年没关过机了，依然用着很流畅。</p><h2 id="命令行好用"><a href="#命令行好用" class="headerlink" title="命令行好用"></a>命令行好用</h2><p>mbp 里边的命令行也是非常方便，远程连接 Linux 服务器时，甚至不需要额外准备第三方工具，直接在命令行用命令连接。</p><p>但是在命令行连接远程服务器，如果 ssh 连接空闲一段时间后，就会自动断开，下次又得重新连接，我在网上看了一些方案之后，后来还是决定用一些工具得了，综合比较后，使用了 Royal TSX，既可以做远程连接，又可以方便的上传文件。</p><h2 id="Adobe-Pr-真快"><a href="#Adobe-Pr-真快" class="headerlink" title="Adobe Pr 真快"></a>Adobe Pr 真快</h2><p>因为我今年一直在录视频教程，视频要二次处理剪辑啥的，二次处理我使用了 Adobe Premiere Pro ，刚开始我是在 Windows 上处理的，但是太慢了，一个 10 分钟左右的视频，渲染起来的时间接近 20 分钟，漫长的等待实在有点受不了，后来就把视频的二次处理换到 mbp 上来处理，10 分钟的视频，大概一两分钟就可以渲染好，速度非常快。</p><p>不过在 mbp 上处理视频，也有一个问题，就是视频长的时候（10 分钟以上），可以明显的听到电脑风扇呼呼响，渲染完成后，电脑又会慢慢冷静下来，这是一个非常明显的变化。这个让我有点吃惊，因为我印象中，mbp 应该比较擅长做视频处理，但是这块实际操作起来，感觉它还是有点压力。</p><p>至于为什么不在 mbp 上使用 FINAL CUT，这是因为有的时候我还需要搭配着 Windows 使用，为了能够在 Windows 和 mbp 之间平滑切换，选择了 Adobe Pr。</p><h2 id="Docker-必备"><a href="#Docker-必备" class="headerlink" title="Docker 必备"></a>Docker 必备</h2><p>个人觉得，使用 mbp，一定安装一个 Docker，Docker 在 mbp 上安装非常方便，比 windows 省事很多，Docker 装好之后，以后的 MySQL、RabbitMQ、Redis、Nginx 等工具，都可以直接使用 Docker 来安装，方便了很多。我一直就是这样搞的。</p><p>不过 Docker 使用过程中，遇到过一次超级耗内存的情况，就是有一次突然电脑风扇呼呼响，检查之后发现是 Docker 的问题，关掉的 Docker 之后就好了，不过后来使用 Docker 没再遇到这个情况。</p><h2 id="Sequel-Pro"><a href="#Sequel-Pro" class="headerlink" title="Sequel Pro"></a>Sequel Pro</h2><p>数据库连接工具我使用了 Sequel Pro，在 Windows 上，我一直是 Navicat 和 SQLyog 两个切换着使用，mbp 上也有 Navicat ，但是搞起来比较麻烦，我就懒得去弄了，于是入乡随俗，选择了 Sequel Pro。</p><p>Sequel Pro 其实用着也没啥不方便的地方，感觉我自己的平时的需求都够用了。</p><h2 id="mbp-Vs-Ubuntu"><a href="#mbp-Vs-Ubuntu" class="headerlink" title="mbp Vs Ubuntu"></a>mbp Vs Ubuntu</h2><p>在公司做开发的时候，用 Ubuntu 做主力系统也用了很长一段时间，这也是我后来切换到 mbp 上之后，没有太多的陌生感的原因之一。个人感觉 mbp 和 Ubuntu 有很多相似的地方，相比于 Ubuntu ，mbp 最大的优势在于软件生态丰富，像 Adobe 全家桶，微信这些东西，在 mbp 上安装就不用折腾。</p><p>小伙伴们要是未来有入手 mbp 的打算，我建议现在可以在 Windows 笔记本上整一个双系统，装上 Ubuntu，这样有一天当你想切换到 mbp 上时，就可以平滑过渡。</p><h2 id="还要-Windows-系统吗"><a href="#还要-Windows-系统吗" class="headerlink" title="还要 Windows 系统吗"></a>还要 Windows 系统吗</h2><p>老实说，Windows 还是离不开。至少我这边有不少事情还是需要在 Windows 上做，例如平时给大家录制视频教程，mbp 当然也可以录，但是录出来的视频文件超级大，不利于分发和传播，所以我一直选择在 Windows 上录制。不过我不太喜欢在 mbp 上搞 Windows ，所以现在是两台笔记本，mbp 是主力，之前那台用了八年的 Windows 打辅助，两台设备切换着用。</p><p>其实在电脑上我不太喜欢折腾，一般能满足需求，我就会一直先用着。换了 mbp 之后，使用最多的软件还是那几个开发工具，其他 mbp 上的功能发掘的少，不过也在慢慢摸索。</p><p>整体来说，还是比较香的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近又有小伙伴问到底值不值得入手一台 MacBook Pro，松哥自己在 2018 年 10 月份的时候入手了一台，到现在为止，也用了一年多了，今天就来和小伙伴们聊一聊使用感受，至于到底值不值，需要大家自行判断。&lt;/p&gt;
    
    </summary>
    
      <category term="MacBookPro" scheme="http://www.javaboy.org/categories/MacBookPro/"/>
    
    
      <category term="MacBookPro" scheme="http://www.javaboy.org/tags/MacBookPro/"/>
    
  </entry>
  
  <entry>
    <title>不用花一分线，松哥手把手教你上线个人博客</title>
    <link href="http://www.javaboy.org/2020/0106/hexo-blog.html"/>
    <id>http://www.javaboy.org/2020/0106/hexo-blog.html</id>
    <published>2020-01-06T01:26:07.000Z</published>
    <updated>2020-01-10T02:07:30.905Z</updated>
    
    <content type="html"><![CDATA[<p>有不少小伙伴私信松哥，打听松哥的博客是怎么做的，其实这个我之前和大家聊过，今天就再来说一说。</p><a id="more"></a><p>我记得是 2015 年 4 月 15 在CSDN上发表了我的第一篇博客，是一个学习笔记，从那之后开启了我博客写作之路，到今天为止 4 年多了。</p><p>这 4 年时间我在 CSDN 上发表的博客最多，共有 550 篇原创，CSDN 是我的大本营，不过在这期间也有断断续续在其他公共平台上发过博客，例如 sf、博客园、掘金、慕课网等，但是都是非常零散，2016 年的时候，利用我的 GitHub 也搭建了一个个人站点，但是只是试验了几个页面，并没有好好去维护。</p><p>今年搞了一个自己的独立博客 <code>http://www.javaboy.org</code> ，从四月份到现在，博客 PV 和 UV 都以肉眼可见的速度增长，我也是蛮开心的。因为大家个人独立博客最怕的就是流量，这也是我把这个事情拖了 4 年才做的原因之一，但是真正动手做之后，我发现搭建个人独立博客比想象的要容易很多，至于流量，只要内容 OK，流量也都不是事。</p><p>今天我就来和大家聊一聊如何搭建一个个人博客。</p><h2 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h2><p>目前静态博客站点非常流行，所以我其实不太建议大家再去搞动态博客系统，那样要操心的事情太多了。使用搭建静态博客，可以让我们把大部分精力集中在博客写作上，而不是无休止的耗费在博客搭建上（很多小伙伴搭建博客的时候兴致勃勃，搭建完成后就意兴阑珊，然后就没有然后了，空留一个博客网站摆在那里）。</p><p>静态博客选型，松哥目前接触到的主要是两种方案：</p><ol><li>GitHub 上 结合 Jekyll 搭建的博客，Jekyll 是一个简单的博客形态的静态站点生产机器。它有一个模版目录，其中包含原始文本格式的文档，通过一个转换器（如 Markdown）和我们的 Liquid 渲染器转化成一个完整的可发布的静态网站，你可以发布在任何你喜爱的服务器上。Jekyll 也可以运行在 GitHub Page 上，也就是说，你可以使用 GitHub 的服务来搭建你的项目页面、博客或者网站，而且是完全免费的。</li><li>本地渲染好 HTML 后，上传到服务端，代表作品就是 hexo。</li></ol><p>简单说，第一种方式，就是我们在本地写好 markdown 之后，直接上传到服务端，服务端会自动渲染成 HTML，然后展示给用户，第二种方案则是我们在本地写好 markdown 之后，在本地将 markdown 渲染成 HTML，然后将渲染好的 HTML 上传到服务端。（markdown 小伙伴们应该都了解吧，我就不做过多介绍了）</p><p>这两种方案松哥都有用，大家见到的 <code>http://www.javaboy.org</code>，是我使用 hexo+icarus 实现的。大家见到的 <code>http://springboot.javaboy.org</code>、<code>http://spring.javaboy.org</code>、<code>http://springmvc.javaboy.org</code>、<code>http://mybatis.javaboy.org</code>、<code>http://maven.javaboy.org</code> 等，则是我使用 Jekyll 来做的，两种方案各有优缺点，这个松哥后面再和大家详述。</p><p>今天主要和大家聊一聊 <code>http://www.javaboy.org</code> 站点的搭建，也就是我采用了 hexo+icarus 来实现的。</p><p>这个博客的所有资金投入就是几十块钱买了一个域名，再就没花钱了。站点托管在 GitHub 上，评论系统也用了 GitHub 来做，如果你能接受 GitHub 提供的默认域名，那你甚至连域名都不用买了，接下来我们就来看看这个东西怎么实现。</p><blockquote><p>如果大家玩过松哥的微人事(<a href="https://github.com/lenve/vhr)或者" target="_blank" rel="noopener">https://github.com/lenve/vhr)或者</a> V 部落(<a href="https://github.com/lenve/VBlog)，那么对于" target="_blank" rel="noopener">https://github.com/lenve/VBlog)，那么对于</a> hexo 上手可能非常容易，因为这个里边也使用了 nodejs，和微人事的前段操作有很多相同的地方。</p></blockquote><h2 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h2><p>用 Hexo 搭建，要是有一点点前端 Node 的使用经验更佳，没有当然也没关系，因为与之相关的命令并不多。使用 Hexo 需要提前在电脑上安装好 Node 和 Git ，安装成功后，就可以开始 Hexo 的安装了。步骤如下：</p><ol><li>安装 Hexo</li></ol><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><ol start="2"><li>在本地创建一个博客目录</li></ol><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p>上面这个命令执行完后，会在本地创建一个 blog 目录，这里边就是独立博客所必须的一些文件，然后进入到这个目录中，执行 <code>npm install</code> 命令，安装相关的依赖。</p><p>安装完成后，会生成如下目录：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><p>这里几个文件/文件夹，我们先来关注其中两个 _config.yml 和 themes 目录， _config.yml 文件中，我们可以做网站的一些基本配置，例如 网站的 title，描述，关键字、图标等，这些配置大都见名知意。如下：</p><p><img src="http://www.javaboy.org/images/other/106-1.png" alt></p><p>配置完成后，定位到 blog 目录，执行 <code>hexo s</code> 就可以在本地启动项目了，启动成功后，浏览器中输入 <code>http://localhost:4000</code> 就可以看到网站了。</p><p>说到 <code>hexo s</code> 命令，这里有几个常用命令需要给大家介绍下，分别是：</p><table><thead><tr><th style="text-align:left">命令</th><th style="text-align:left">简写</th><th style="text-align:left">中文含义</th></tr></thead><tbody><tr><td style="text-align:left">hexo server</td><td style="text-align:left">hexo s</td><td style="text-align:left">本地启动</td></tr><tr><td style="text-align:left">hexo generate</td><td style="text-align:left">hexo g</td><td style="text-align:left">生成静态文件</td></tr><tr><td style="text-align:left">hexo deploy</td><td style="text-align:left">hexo d</td><td style="text-align:left">部署网站</td></tr><tr><td style="text-align:left">hexo clean</td><td style="text-align:left"></td><td style="text-align:left">清除缓存和已经生成的静态文件</td></tr></tbody></table><p>这四个算是松哥这两天使用最多的命令，其他的命令，大伙可以参考<a href="https://hexo.io/zh-cn/docs/commands" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/commands</a>。</p><h2 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h2><p>一般来说，主题都会自己配置一个，个人感觉 Hexo 的生态还是比较丰富的，有很多可选的主题，Hexo 默认使用的主题是 landscape ，松哥最早使用了 hexo-theme-next 主题。博客在本地跑起来之后，接下来就是修改主题，主题修改的第一步就是先选一个自己认为好看的主题，选好之后，首先将之克隆到 <code>./themes</code> 目录下，这个目录下原本有有一个 landscape 文件夹，里边放的默认的样式，当然开发者也可以直接将主题文件下载好拷贝进来，但是我还是建议使用 clone ，使用 clone ，假如有一天这个主题更新了，只需要 pull 一下就可以获取到最新样式了。</p><p>以 hexo-theme-next 主题为例， clone 命令如下：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd your-hexo-site</span><br><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>克隆成功后，修改 hexo 的 _config.yml 文件，将主题修改为 next，如下：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>主题创建好之后，接下来就是对主题的配置了，这个比较容易，直接参考<a href="https://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="noopener">官方文档</a>即可。配置完成后，执行如下命令，即可看到新的主题效果：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>命令含义可以参考上面的表格，这里不再赘述。</p><p>这个 next 主题我大概用了两三个月，现在换成了 icarus，大家在主题配置的时候，只要会配置一个，其他多个肯定也就没有问题了。</p><h2 id="绑定到-GitHub"><a href="#绑定到-GitHub" class="headerlink" title="绑定到 GitHub"></a>绑定到 GitHub</h2><p>大家可能已经迫不及待想要把博客上传到 GitHub 了，绑定到 Github 步骤也很简单，首先以 <code>自己的GitHub ID.github.io</code> 为名创建一个 public 仓库，例如我的 ID 为 lenve，创建的仓库如下：</p><p><img src="http://www.javaboy.org/images/other/23-2.png" alt></p><p>创建成功之后，修改 hexo 的 <code>_config.yml</code> 文件，配置 GitHub 地址，如下：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:lenve/lenve.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>这里根据自己的地址来配置即可，配置完成后，执行如下命令：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>执行完成后，就可以将数据上传到 GitHub 了（当然这里需要大家提前配置一下 GitHub 的公钥，具体可以参考<a href="https://mp.weixin.qq.com/s/x5bRe4QBMoVFKv5jNl9iRw" target="_blank" rel="noopener">Git关联远程仓库</a>）。</p><p>上传成功后，访问 <code>https://lenve.github.io</code> 就可以看到自己的个人站点了，这是 GitHub 默认给我们提供的域名。</p><p>如果你对 GitHub 提供的域名不满意，也可以自己申请一个域名，分分钟就配置好了。</p><h2 id="域名申请"><a href="#域名申请" class="headerlink" title="域名申请"></a>域名申请</h2><p>域名申请建议使用国外的域名提供商，不用备案（一个字，快！不用等），松哥使用了 godaddy ，主要是因为这个服务商支持支付宝付款，域名申请就比较容易了，无需多说，不过类似的域名提供商其实很多，大家不一定用这个，也可以自己再看看。</p><h2 id="域名和-GitHub-绑定"><a href="#域名和-GitHub-绑定" class="headerlink" title="域名和 GitHub 绑定"></a>域名和 GitHub 绑定</h2><p>域名申请成功之后，接下来的配置，也分为两部分。</p><h3 id="GitHub-配置"><a href="#GitHub-配置" class="headerlink" title="GitHub 配置"></a>GitHub 配置</h3><p>首先在博客所在目录下的 source 目录中（<strong>注意不要放错位置了</strong>），创建一个 CNAME 文件，文件内容就是你的域名，如下：</p><p><img src="http://www.javaboy.org/images/other/23-3.png" alt></p><p>然后执行 <code>hexo d</code> 命令将这个文件上传到 GitHub 就可以了。</p><p>在网上看到有人直接在 GitHub 上配置这个，如下图：</p><p><img src="http://www.javaboy.org/images/other/23-4.png" alt></p><p>这种方式也可以，这种方式会自动生成一个 CNAME 文件到当前仓库中，但是松哥在这里不推荐大家使用这种方式，因为如果你在本地执行了 <code>hexo clean</code> ，然后再去上传，就会丢失掉 CNAME 文件，然后又得重新配置。<strong>关键是当你执行了 <code>hexo clean</code> 之后，你可能还发现不了 CNAME 文件已经丢失了。</strong></p><h3 id="域名解析配置"><a href="#域名解析配置" class="headerlink" title="域名解析配置"></a>域名解析配置</h3><p>域名解析这块，当时遇到了一些问题，后来松哥使用了国内的 DNSPod 去做域名解析了，没有使用 godaddy 提供的域名解析。使用 DNSPod 首先要做的，就是修改 godaddy 提供的域名解析服务，登录自己的 godaddy 账号，找到域名管理，修改域名解析服务为 DNSPod ，如下：</p><p><img src="http://www.javaboy.org/images/other/23-5.png" alt></p><p>然后登录到 DNSPod（没有账号注册一个），然后添加自己的域名解析，如下图：</p><p><img src="http://www.javaboy.org/images/other/23-6.png" alt></p><p>添加两条 A 记录，指向 GitHub 的 IP 地址，再添加一条 CNAME ，指向你的 GitHub 域名就可以了。 </p><p>如此之后，大功告成！</p><p><img src="http://www.javaboy.org/images/other/23-7.png" alt></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>好了，不知道小伙伴们有没有 GET 到呢？这个不用花很多钱，就是一个域名的费用而已（如果你不想用 GitHub 提供的域名的话），也不需要额外买服务器，hexo 的使用也很简单，有兴趣小伙伴赶快实践下吧！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有不少小伙伴私信松哥，打听松哥的博客是怎么做的，其实这个我之前和大家聊过，今天就再来说一说。&lt;/p&gt;
    
    </summary>
    
      <category term="blog" scheme="http://www.javaboy.org/categories/blog/"/>
    
    
      <category term="blog" scheme="http://www.javaboy.org/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>听说你的 IDEA 昨天掉链子了？松哥给你准备了大招</title>
    <link href="http://www.javaboy.org/2020/0105/idea.html"/>
    <id>http://www.javaboy.org/2020/0105/idea.html</id>
    <published>2020-01-05T01:25:51.000Z</published>
    <updated>2020-01-10T02:05:45.614Z</updated>
    
    <content type="html"><![CDATA[<p>昨天一直在忙，中午抽空瞅了一眼技术群，天呐，竟然都在切磋 IDEA 激活码的事情，瞬间明白可能 jetbrains 又在搞事情了。</p><a id="more"></a><p>我大概了解了下，这次出事的主要是 2019 版，之前的 2018 版没有受影响。</p><p>我也是 2018 版用了好久才切换到 2019 版上面来的，刚用 2019 版的时候还没啥感觉，用久了发现 2019 版确实挺好用的，里边有很多新增的特性，这些我以后可以和大家细细的去聊，这里就不再多说。</p><p>由于国内目前的版权环境，使用正版 IDEA 的小伙伴可能并不多，正版一套其实还是蛮贵的，特别是对于一些学生党来说简直就是天价了，不过 jetbrains 公司还算是比较人性化的，提供了多种免费获取正版授权的方案。</p><p>第一种就是开源项目。如果你有一个不错的开源项目，而且一直在维护，那么你可以向 jetbrains 公司申请全家桶软件的激活码，这就是正儿八经的正版软件了。这条路看着容易，其实对大部分小伙伴来说还是有挺高的门槛的。</p><p>另一个适合在校大学生的方案就是使用一个 edu 邮箱，向 jetbrains 公司申请激活码。因为大部分学校可能都会给学生分配一个 edu 邮箱，用这个邮箱在 jetbrains 官网注册账号，然后就可以轻松获取到一个激活码。</p><p>个人感觉第二种方案其实漏洞比较大，因为获取一个 edu 邮箱太过 easy 了，即使学校不给，作为一个专业的程序员，还是有很多办法获取到一个 edu 邮箱的，我看到群里很多小伙伴都是采用了这种方案解决的。</p><p>不过如果已经工作了，自身条件也允许，其实也可以尝试一下正版 IDEA，毕竟作为一个程序员，应该是能够感受到一个好的 IDE 开发之不易的。</p><p><strong>当然，如果你既没有拿的出手的开源项目，也搞不到 edu 邮箱，不妨在松哥公众号后台回复 idea，看看松哥给你的惊喜。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨天一直在忙，中午抽空瞅了一眼技术群，天呐，竟然都在切磋 IDEA 激活码的事情，瞬间明白可能 jetbrains 又在搞事情了。&lt;/p&gt;
    
    </summary>
    
      <category term="idea" scheme="http://www.javaboy.org/categories/idea/"/>
    
    
      <category term="idea" scheme="http://www.javaboy.org/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>2019 原创技术干货整理</title>
    <link href="http://www.javaboy.org/2020/0103/2019-article.html"/>
    <id>http://www.javaboy.org/2020/0103/2019-article.html</id>
    <published>2020-01-03T01:25:37.000Z</published>
    <updated>2020-01-10T02:05:01.448Z</updated>
    
    <content type="html"><![CDATA[<p>公众号的文章改整理一下了，老有小伙伴表示文章找不到，确实是这样，公众号的文章看过了没消化，后来再想找到有点难，有的小伙伴机智的收藏了一下，但是因为收藏夹里的东西太多了，后来还是不好找。</p><a id="more"></a><p>其实松哥公众号上的文章，大家都可以直接在松哥博客上搜索，博客右上角有一个搜索功能：</p><p><img src="http://www.javaboy.org/images/other/104-1.png" alt></p><p>好了，今天我就把 2019 年公众号上的原创干货整理出来，做成索引，方便小伙伴们查找。</p><h2 id="Spring-Boot-系列"><a href="#Spring-Boot-系列" class="headerlink" title="Spring Boot 系列"></a>Spring Boot 系列</h2><ol><li><a href="https://mp.weixin.qq.com/s/DSbR-0Mi6fRGgPQSnL47Pg" target="_blank" rel="noopener">纯 Java 搭建 SSM 项目</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486390&amp;idx=2&amp;sn=351d689ae8e541915ab7c8fcbdb45793&amp;chksm=e9c359d6deb4d0c0afdffa191895bb09adec55625945e3f05c7a4f1528636f86915b493d5ef8&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">创建 Spring Boot 项目的三种方式</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486397&amp;idx=2&amp;sn=44f4206b0431e3200fee9a058d6087f8&amp;chksm=e9c359dddeb4d0cbb9fcd7b9c5108a71900dcee28db16c91468797c92ef9678ae7d91da212f9&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">理解 spring-boot-starter-parent</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486427&amp;idx=2&amp;sn=91c4462d44f3866bc9ee4cc71feb4e89&amp;chksm=e9c359bbdeb4d0ada43758582d061da9282bb31d6911eb9aada36e61cd70c841426154549665&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">理解配置文件 application.properties ！</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486440&amp;idx=2&amp;sn=51d96a2a11013c38b0756f634005521a&amp;chksm=e9c35988deb4d09eebd49c04088bdf7038035a454c88aaef3c62c23ccc6cef29ffe68f3d93fa&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Boot中的 yaml 配置</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486499&amp;idx=2&amp;sn=ce229938f5284e3a43e04e9f84121bd1&amp;chksm=e9c35e43deb4d75571c430f42758930f2e963df4bd692dcbc52beac0c6907f9d172ad533904a&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">自定义 Spring Boot 中的 starter</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486535&amp;idx=2&amp;sn=2a0c95e2c10ff2d3dea883a4d0352da9&amp;chksm=e9c35e27deb4d73116f17a5105ae40dd08e25dc3393e916b270683d46f459938f263b966bdc0&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">理解自动化配置的原理</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486559&amp;idx=2&amp;sn=8a78f43c2ba9d820011ec1f953b1e9d0&amp;chksm=e9c35e3fdeb4d7292592937036e5835dbd5d4eb7c81ebc15c84b5c87950d7ccf2d9d21f24ee5&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Boot 中配置 Https</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486582&amp;idx=2&amp;sn=ad1c5eac40c85b54e7545a382450a640&amp;chksm=e9c35e16deb4d700e3c3913ab1c890ad8020027113e1bfdf37578bee1e40d5e8fe03a657b780&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Boot 整合 Thymeleaf</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486670&amp;idx=2&amp;sn=3f7d624d4dd0c3cef09c24a7616845d4&amp;chksm=e9c35eaedeb4d7b85a1e52249522fa997b3d8cdd975b8bc5fdfeefcc30ce0136867f9c1dd1cb&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Boot 整合 Freemarker</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486682&amp;idx=2&amp;sn=c3c203a006e19a18b09f768073fd37c4&amp;chksm=e9c35ebadeb4d7acb85b14f1ede981a3a212c5051164022a46cc529939051f0651aa1d0a36fd&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Boot 中的静态资源配置</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486694&amp;idx=2&amp;sn=8f5b293ab5707b97ef16ddf553575b82&amp;chksm=e9c35e86deb4d7909ea7adf3a0b0507204a900088e4ec56a5efc0392f9948d660e4f29e31eb0&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">@ControllerAdvice 的三种使用场景</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486703&amp;idx=2&amp;sn=3a61e9b2a9a4d2c0a6925958b6818a26&amp;chksm=e9c35e8fdeb4d7993e4ccc72565dfabf973b6b7b26acb849449504163be95ac9a89ad180b287&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Boot 中的全局异常处理</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486714&amp;idx=2&amp;sn=cc5164e4ee779241998c4d4173449bbc&amp;chksm=e9c35e9adeb4d78c89f70a483c4e30ac20bdfcda8715e71bd5b31706e1549eb766550bb620db&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">CORS 解决跨域问题</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486744&amp;idx=2&amp;sn=14b4eb78b9ef8b3528a305619a5f9a66&amp;chksm=e9c35f78deb4d66e61e3dfd91943a872ba8a2afbc5e41582c9b4414f5bc2fb9fd06ca7c6c4ff&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">定义系统启动任务的两种方式</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486770&amp;idx=2&amp;sn=03c4d34b5497b5328444237adf049038&amp;chksm=e9c35f52deb4d6442e007665ca8d48518582c8e22cb229f1fe5b0a467aa9bcf0650f54883aac&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">定时任务的两种实现方式</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486800&amp;idx=2&amp;sn=39965b130bdfc39e66a2d40a84d7ba57&amp;chksm=e9c35f30deb4d62602fd19cb12b8b755cf4be37de3e0510e2a3c7104b01446681355822947bd&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">SpringBoot 整合 Swagger2</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486819&amp;idx=2&amp;sn=38914644e5fb688d9bf662e112f90aad&amp;chksm=e9c35f03deb4d615e7ddff95a3fccfafaeda21d5a05605de526f31f75faa0ba458200936c501&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Boot 中自定义 SpringMVC 配置</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486840&amp;idx=2&amp;sn=5d4f75a81b3d8eb02f288a92015f247c&amp;chksm=e9c35f18deb4d60eba6a3ecbe886999ef6c284ea3afce9f0f0b06a93def0dfc00ffc116f4d8b&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Boot 整合 JdbcTemplate</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486879&amp;idx=2&amp;sn=16df1ab5688b6df3f4ae59ffa685e00a&amp;chksm=e9c35fffdeb4d6e994d15d66af1d2ab59f491c1dbe99932f4584ed025947ed1ae176b6226720&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Boot 整合JdbcTemplate 多数据源</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486904&amp;idx=2&amp;sn=8168bef3766c91d65838bb2708d051cc&amp;chksm=e9c35fd8deb4d6ce4533758b6c9871a81dcfd045382623bcc1a593b8c23aacfc9440ff0e984d&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">整合 MyBatis</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486912&amp;idx=3&amp;sn=425b82e363554a3fdb89cd955044a314&amp;chksm=e9c35fa0deb4d6b630a0b875cbf923b7c2e64313b74d1d827ebcdbb4cd85839e5f83e789df0c&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">整合 MyBatis 多数据源</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486935&amp;idx=2&amp;sn=dc8d2596d9238f27db47c7e74696bd76&amp;chksm=e9c35fb7deb4d6a1e5ccd9d6e7f4326a241c849a555b2e4c8c30a75cb902ba283460a12fb5c1&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">理解 Spring Data Jpa</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486959&amp;idx=2&amp;sn=9d29a875d4d475267a9b7855544bdbca&amp;chksm=e9c35f8fdeb4d6991f8f89fb065be43d48f5949a26c892c3ef2a13606cf6f79e7e63b735fdc4&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Boot 整合 Redis</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247486982&amp;idx=2&amp;sn=ca166f7b88d7c8e3aa16aa3742e8d2ef&amp;chksm=e9c35c66deb4d5705ed48d8d2234e38148e6a71f613e90a6fd6f93bb29aaa9be42db488c3f83&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Nginx 极简扫盲入门</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247487019&amp;idx=2&amp;sn=2bdb576650d4e493606312544c29d641&amp;chksm=e9c35c4bdeb4d55d29272bf904098345b913f517c07c35cef05c172ae0c440cda1c190b14479&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Boot 整合 Session 共享</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247487052&amp;idx=2&amp;sn=21806ea097f28e30bd1ec15fb7d0ee44&amp;chksm=e9c35c2cdeb4d53a185b4a444b9c8c82f5724730ba990dca1f1c7906ac3a1461944c193e1969&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Boot 整合 Redis</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247487066&amp;idx=2&amp;sn=1e411c6543c1dbf9f80219a0db6203a4&amp;chksm=e9c35c3adeb4d52cb298a79344dec218071f429624181b6d4d603519cefbd878d5c45bb40679&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Boot 整合 Ehcache</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247487103&amp;idx=2&amp;sn=6b83609faf02d0a2a6e153c7db78a3ad&amp;chksm=e9c35c1fdeb4d5098bbc1c4093aff970dd303e3e8c7edaa5d514cfa454973a5ca3ceaa0c7bdd&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Boot 构建 RESTful 风格应用</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247487130&amp;idx=2&amp;sn=5cf21ef43cc34c572a05eda61907e310&amp;chksm=e9c35cfadeb4d5ecd1be5913e366f62e7f651c4d15805641cdea9db05e3580d5e284f14edb0a&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Boot 整合 Shiro</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247487146&amp;idx=3&amp;sn=ccd3d37ac7678821c9308453a6eb7f16&amp;chksm=e9c35ccadeb4d5dc2faae80c78852233735a924b0c31c8a64403b4f5fbe2df56d3adc3f5eb6d&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">整合 Spring Security</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247487167&amp;idx=2&amp;sn=21ca4e87814086580fbf2fd2c3ea00c7&amp;chksm=e9c35cdfdeb4d5c98730cba97f2e50fc8e3b151b48811f7f11eefa39049e4ff4626122e7c75d&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Security 添加验证码</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247487212&amp;idx=2&amp;sn=54d59ea55f7f9df6c7dbd0be3849ae65&amp;chksm=e9c35c8cdeb4d59ab5f26df6f389a81e4d0029a943e0aedce010716147ac6dd4b5338f6ba778&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">SpringSecurity 使用 JSON 格式登录</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247487219&amp;idx=2&amp;sn=5a90dde59f21b1ee036488350edc8c6d&amp;chksm=e9c35c93deb4d5851dd345c53c614278c0e5549c65f1db3df8088d1b407cc860952c62970ff1&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">SpringSecurity 中角色继承的坑</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247487270&amp;idx=2&amp;sn=dcc3bb1660145cb2ff3ce3cecd85b012&amp;chksm=e9c35d46deb4d4500f2b918ec0d5168f4e6fe929d71be094ff5568c43d1135aad570021adb2d&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Security 整合 JWT</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247487283&amp;idx=2&amp;sn=1cf5dddbed5c0ea728f44fcf17e1d375&amp;chksm=e9c35d53deb4d445f38d1bcd509bbcd00f6950da83384013b2ded615ae1eed104affb264d2e7&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Security 非法请求直接返回 JSON</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247487291&amp;idx=2&amp;sn=d8f0b196710a06c2deb04b0d569f29cd&amp;chksm=e9c35d5bdeb4d44dd479f3f6c234110b6d7a61930382a8e7ff3da7acd594da68dfbc35afaa8d&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Boot 热部署</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247487374&amp;idx=2&amp;sn=e6d50ebecc5ffa67fa0999706729c53c&amp;chksm=e9c35deedeb4d4f8e7b1f9c18122b0c12173323aa5fcd505359fbd66b5bfcf74f3cd601b9f56&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Boot 可执行 jar 分析</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247487418&amp;idx=2&amp;sn=f4afea6e7b2cf33e00819dbe54bf82ed&amp;chksm=e9c35ddadeb4d4cc10198f3c02ed4c4321c6eeac82991138f87a9d24dd8e6473c92e2113dca0&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">部署 Spring Boot 到远程 Docker 容器</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247487440&amp;idx=2&amp;sn=91e352ab638a63cbc126f011b4de923d&amp;chksm=e9c35db0deb4d4a668155ad4fd07004da5cb33b8a6518b3c1440973b1eacfa3d3d708d5ec101&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">使用 Jib 部署 Spring Boot</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247487459&amp;idx=2&amp;sn=6d1405b414e1787d3fa08806ae096fd2&amp;chksm=e9c35d83deb4d4956f03d9e262f22f5499174db8cea3e0bb78fcff3dc260e1d4dc325fa6f6df&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Boot 邮件发送的 5 种姿势</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NDY0MTkzNQ==&amp;mid=2247487506&amp;idx=2&amp;sn=6b269e8f2c37ea55ea09850afe1f84b1&amp;chksm=e9c34272deb4cb641a2349b8ce7c43c59f33370ddcc67670648b3d468efa77bd0dac746a2922&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Spring Session 中的 Bug</a></li><li><a href="https://mp.weixin.qq.com/s/kJou5tMWuMZpbrtGoaLrdg" target="_blank" rel="noopener">Spring Boot 2.2.0 中的 Bug</a></li><li><a href="https://mp.weixin.qq.com/s/f3QexxLp9vT6aE1Pl3jHGw" target="_blank" rel="noopener">Spring Boot 开发微信公众号（一）</a></li><li><a href="https://mp.weixin.qq.com/s/1jTl9kBeFeibjbe5EbsCzg" target="_blank" rel="noopener">Spring Boot 开发微信公众号（二）</a></li><li><a href="https://mp.weixin.qq.com/s/deUN4S34y6xwaWnY4Y4jpg" target="_blank" rel="noopener">15 道 Spring Boot 面试题</a></li></ol><h2 id="前后端分离系列"><a href="#前后端分离系列" class="headerlink" title="前后端分离系列"></a>前后端分离系列</h2><ol><li><a href="https://mp.weixin.qq.com/s/HWRYAR16vLE1XFep6_i1tA" target="_blank" rel="noopener">一个Java程序猿眼中的前后端分离以及Vue.js入门</a></li><li><a href="https://mp.weixin.qq.com/s/Qbqvlo7ftbyP6dnbuUcxrw" target="_blank" rel="noopener">Spring Boot + Vue 前后端分离，两种文件上传方式总结！</a></li><li><a href="https://mp.weixin.qq.com/s/K8ANNmm6ZrP2xMyK6LGZ_g" target="_blank" rel="noopener">Spring Boot + Vue 前后端分离开发，前端网络请求封装与配置</a></li><li><a href="https://mp.weixin.qq.com/s/5GsOO4QK9AnR0K6FdZixOw" target="_blank" rel="noopener">Spring Boot + Vue 前后端分离开发，权限管理的一点思路</a></li><li><a href="https://mp.weixin.qq.com/s/f5kZM3TVZzdv1tI0THjnIg" target="_blank" rel="noopener">前后端分离时代，Java 程序员的变与不变！</a></li><li><a href="https://mp.weixin.qq.com/s/szgfT3tnYMCHSeiE3_QnpA" target="_blank" rel="noopener">学艺不精，总是掉坑！前后端分离历险记</a></li><li><a href="https://mp.weixin.qq.com/s/C7PIck3SIPPTcA3NX3ELoQ" target="_blank" rel="noopener">使用 Nginx 部署前后端分离项目，解决跨域问题</a></li><li><a href="https://mp.weixin.qq.com/s/GvqLzCZngQiMqVE_ZTafeA" target="_blank" rel="noopener">喜大普奔，两个开源的 Spring Boot + Vue 前后端分离项目可以在线体验了</a></li><li><a href="https://mp.weixin.qq.com/s/NV7pRVnR6sLSjI2Snjl_aQ" target="_blank" rel="noopener">前后端分离开发中动态菜单的两种实现方案</a></li><li><a href="https://mp.weixin.qq.com/s/wwZDx4sRbXjVJPqccRcJvg" target="_blank" rel="noopener">前后端分离，我怎么就选择了 Spring Boot + Vue 技术栈？</a></li></ol><h2 id="MySQL-系列"><a href="#MySQL-系列" class="headerlink" title="MySQL 系列"></a>MySQL 系列</h2><ol><li><a href="https://mp.weixin.qq.com/s/_lsNyXHrsu131mHONQi5rg" target="_blank" rel="noopener">提高性能，MySQL 读写分离环境搭建(一)</a></li><li><a href="https://mp.weixin.qq.com/s/SC0OYM6yO_GxQh9DvSsnoQ" target="_blank" rel="noopener">提高性能，MySQL 读写分离环境搭建(二)</a></li><li><a href="https://mp.weixin.qq.com/s/xVJjsONasLroJrAGEiuitw" target="_blank" rel="noopener">借力 Docker ，三分钟搞定 MySQL 主从复制！</a></li><li><a href="https://mp.weixin.qq.com/s/bcyjBgEqg6Or5zdi4jHaiA" target="_blank" rel="noopener">MySQL 只能做小项目？松哥要说几句公道话！</a></li><li><a href="https://mp.weixin.qq.com/s/qUGANVj2mmoMwUZEV5Zc1w" target="_blank" rel="noopener">北冥有 Data，其名为鲲，鲲之大，一个 MySQL 放不下！</a></li><li><a href="https://mp.weixin.qq.com/s/7pj5E2HvmiejBJrW0T86oQ" target="_blank" rel="noopener">What？Tomcat 竟然也算中间件？</a></li><li><a href="https://mp.weixin.qq.com/s/qWf5XZzhgpSuIGpE2T6iJg" target="_blank" rel="noopener">分布式数据库中间件 MyCat 搞起来！</a></li><li><a href="https://mp.weixin.qq.com/s/4DvKAKiG2sFe_vEQ0mUkeQ" target="_blank" rel="noopener">数据库分库分表，分片配置轻松入门！</a></li><li><a href="https://mp.weixin.qq.com/s/oNsTcrWCjntQefD2B0sq1A" target="_blank" rel="noopener">分布式数据库如何实现主键全局自增？</a></li><li><a href="https://mp.weixin.qq.com/s/OZ0Uqv7UCiyhhRurNdVi4A" target="_blank" rel="noopener">给数据库减负的八个思路</a></li><li><a href="https://mp.weixin.qq.com/s/3eCXo2XhhgT5ZTia3mGbKQ" target="_blank" rel="noopener">MyBatis 中 @Param 注解的四种使用场景，最后一种经常被人忽略！</a></li><li><a href="https://mp.weixin.qq.com/s/-CPpM0xPbqip6Zx6TKzCDQ" target="_blank" rel="noopener">MyBatis中主键回填的两种实现方式</a></li></ol><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><ol><li><a href="https://mp.weixin.qq.com/s/Lr5CwOSqYvx-JrFCSGf_Dw" target="_blank" rel="noopener">起早贪黑几个月，我写完了人生第一本书！</a></li><li><a href="https://mp.weixin.qq.com/s/qGFo2MKkD0AObBJDPR8veQ" target="_blank" rel="noopener">公司倒闭 1 年了，而我当年的项目上了 GitHub 热榜</a></li><li><a href="https://mp.weixin.qq.com/s/wLSM1bHK4-rjOa3WuS46CQ" target="_blank" rel="noopener">一个野生程序员的自我修养</a></li><li><a href="https://mp.weixin.qq.com/s/IJZukUhu-Rec8lF9KQseoQ" target="_blank" rel="noopener">我的第一本书，被选作大学教材了！</a></li><li><a href="https://mp.weixin.qq.com/s/Zx4jiw5QVv3CBa87_K9_Gw" target="_blank" rel="noopener">一个转行程序员的买房经历</a></li><li><a href="https://mp.weixin.qq.com/s/2tSD3U2nmIR-7L-U0sTtUQ" target="_blank" rel="noopener">当公司倒闭时，我在干什么？</a></li><li><a href="https://mp.weixin.qq.com/s/u00E39EyalzRBere_5kpOA" target="_blank" rel="noopener">跟着平台混了四年，现在要单飞了！</a></li><li><a href="https://mp.weixin.qq.com/s/d4x-kNNTfXOh9AODe0Pzzg" target="_blank" rel="noopener">每次回西安，都会动摇我继续留在深圳的决心</a></li><li><a href="https://mp.weixin.qq.com/s/BRQl02_a1FVDXckXjFsJ5Q" target="_blank" rel="noopener">1024，20个入行故事，浮世中见证着程序员的奋斗</a></li><li><a href="https://mp.weixin.qq.com/s/CGK8Labju1CjdkI3omgz-g" target="_blank" rel="noopener">搬砖不易，和大家聊聊松哥经历过的两次裁员</a></li><li><a href="https://mp.weixin.qq.com/s/Jchy_VCMPeCjpKQsfW8k-Q" target="_blank" rel="noopener">华为云 open day，带你看看别人家的公司</a></li></ol><h2 id="系列教程"><a href="#系列教程" class="headerlink" title="系列教程"></a>系列教程</h2><ol><li><a href="https://mp.weixin.qq.com/s/CyMXvY-IzY-69Q_uYxxXMA" target="_blank" rel="noopener">Maven 入门，Maven + IDEA 创建多模块项目，松哥手敲了 30 多页教程给大家送来了</a></li><li><a href="https://mp.weixin.qq.com/s/4N0qWTHM2CuUFRoBIBUHwQ" target="_blank" rel="noopener">来了，松哥纯手工打造的超 50 页 Spring 教程开放下载了</a></li><li><a href="https://mp.weixin.qq.com/s/4v7VPjSjf5DW86I3ecptFw" target="_blank" rel="noopener">来了，松哥纯手工打造 80 多页的 SpringMVC 教程开放下载了</a></li><li><a href="https://mp.weixin.qq.com/s/sf_ZtaZllP4RdyftZghoHQ" target="_blank" rel="noopener">MyBatis 教程来啦，松哥手码的 SSM 教程总算齐活了，小伙伴们可以下载啦</a></li></ol><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ol><li><a href="https://mp.weixin.qq.com/s/XiUUgFvUQ3y8FUDSXbhEKA" target="_blank" rel="noopener">2019 Java 全栈工程师进阶路线图，一定要收藏！</a></li><li><a href="https://mp.weixin.qq.com/s/_eMbFDal-vfWKwHXDAolbw" target="_blank" rel="noopener">快来！松哥的免费资源库更新啦！</a></li><li><a href="https://mp.weixin.qq.com/s/6PPYwrNestz-gvmB4ZkAqQ" target="_blank" rel="noopener">两步解决maven依赖导入失败问题</a></li><li><a href="https://mp.weixin.qq.com/s/3kyaY0bwoZw3D_big2F11A" target="_blank" rel="noopener">小程序开发框架WePY和mpvue使用感受</a></li><li><a href="https://mp.weixin.qq.com/s/g6D5b_YilzLeBH3pdjRnww" target="_blank" rel="noopener">干货|6个牛逼的基于Vue.js的后台控制面板，接私活必备</a></li><li><a href="https://mp.weixin.qq.com/s/CDnUVdktu1OKiR1HxFwv3Q" target="_blank" rel="noopener">Jpa VS MyBatis，你用哪个？</a></li><li><a href="https://mp.weixin.qq.com/s/HLP_9tyh_uU6XU5zJtks2A" target="_blank" rel="noopener">SpringMVC 方法三种类型返回值总结，你用过几种？</a></li><li><a href="https://mp.weixin.qq.com/s/rQGOyistMMz-X3kI0x21gQ" target="_blank" rel="noopener">天呐，我的服务器竟然也被黑客攻击了！</a></li><li><a href="https://mp.weixin.qq.com/s/OCMea0O_ussoGpMSb3R1oA" target="_blank" rel="noopener">Java 开发中到底该不该用 Lombok？</a></li><li><a href="https://mp.weixin.qq.com/s/_M0oqA9H4DXvB0xdgHjPGw" target="_blank" rel="noopener">想让自己的项目6666，可是 Chrome 不答应！</a></li><li><a href="https://mp.weixin.qq.com/s/MUPcD_-7NMF32tFLj9zhFQ" target="_blank" rel="noopener">天天吹微服务，单体应用有啥不好？</a></li><li><a href="https://mp.weixin.qq.com/s/KxyxlZoZpRWrbK3FJ7lAGA" target="_blank" rel="noopener">身边的人都说微服务好，好在哪？</a></li><li><a href="https://mp.weixin.qq.com/s/pGpRXFqIJN7IhQ5qyNPmRw" target="_blank" rel="noopener">IDEA 神器入坑指南！17 个常用快捷键奉上！</a></li><li><a href="https://mp.weixin.qq.com/s/BwI8q9Cj3BfCbVUURc9DlA" target="_blank" rel="noopener">Spring 中用 XML 装配 Bean，竟然有五种姿势！</a></li><li><a href="https://mp.weixin.qq.com/s/PbFyhErajZoQPJ_G3osJeQ" target="_blank" rel="noopener">浏览 GitHub 太卡了？教你两招！</a></li><li><a href="https://mp.weixin.qq.com/s/yhDqHfbWJmRlPR0Nt1UUyg" target="_blank" rel="noopener">原创的离线版 Redis 教程，给力！</a></li><li><a href="https://mp.weixin.qq.com/s/F2jee_Y7J7lrOHfyXBBSvw" target="_blank" rel="noopener">微人事 star 数超 10k 啦！聊聊如何打造一个 star 数超 10k 的开源项目</a></li><li><a href="https://mp.weixin.qq.com/s/T_GIavgSPQBoJGqZ-2PJVQ" target="_blank" rel="noopener">晚十点半之前下班是耻辱？老板干嘛老爱和员工谈创业精神？</a></li><li><a href="https://mp.weixin.qq.com/s/9aMRFEXbh0-usVE96uZ8Ag" target="_blank" rel="noopener">学 Maven，看松哥这一篇就够了</a></li><li><a href="https://mp.weixin.qq.com/s/PZA4IjqXpQt1TWlCWguyvQ" target="_blank" rel="noopener">学习 Spring，看松哥这篇万余字的干货，够用了！</a></li><li><a href="https://mp.weixin.qq.com/s/Eo2RRB6zKQuPDMWlnCHDrw" target="_blank" rel="noopener">两年了，微人事项目迎来了一次重大更新</a></li><li><a href="https://mp.weixin.qq.com/s/7rvGBlfYie9A_4_J1uoqpg" target="_blank" rel="noopener">跟松哥学 SpringMVC（1/2）</a></li><li><a href="https://mp.weixin.qq.com/s/yNFFDWa8srJL0ArRE4H0oA" target="_blank" rel="noopener">跟松哥学 SpringMVC（2/2）</a></li></ol><h2 id="视频干货"><a href="#视频干货" class="headerlink" title="视频干货"></a>视频干货</h2><ol><li><a href="https://mp.weixin.qq.com/s/qN01Le434FWom0c3jqiQmA" target="_blank" rel="noopener">为了帮助前后端分离的新手，我做了一次大胆的尝试！</a></li><li><a href="https://mp.weixin.qq.com/s/sgjm09_e8ue5blXqPgeXZA" target="_blank" rel="noopener">说出来你可能不信，Spring Boot 中 Session 共享不超过 5 行代码！</a></li><li><a href="https://mp.weixin.qq.com/s/1rVPzJGCtDZKvMoA4BYzIA" target="_blank" rel="noopener">Spring Boot 整合 OAuth2，松哥手把手教你！</a></li><li><a href="https://mp.weixin.qq.com/s/Rrj7oco3K8kJBsTxEEdz9g" target="_blank" rel="noopener">Spring Boot 结合 WebSocket 实现在线聊天</a></li><li><a href="https://mp.weixin.qq.com/s/Sn59dxwtsEWoj2wdynQuRQ" target="_blank" rel="noopener">Spring Security 结合 Jwt 实现无状态登录</a></li><li><a href="https://mp.weixin.qq.com/s/qxMkC6H4XfCT4LqMrYtgsQ" target="_blank" rel="noopener">手把手教你 Spring Boot 整合 Spring Data Jpa</a></li><li><a href="https://mp.weixin.qq.com/s/OMgoUfH8lk8hDfuqWXGWTA" target="_blank" rel="noopener">Spring Boot + Vue，手把手教你做文件上传</a></li><li><a href="https://mp.weixin.qq.com/s/eun-ChD5KyN6LsbR9qFfiQ" target="_blank" rel="noopener">使用 Spring Security 实现微人事前后端分离登录接口</a></li><li><a href="https://mp.weixin.qq.com/s/rH5MeKuTnXbyaDaGsU4wNw" target="_blank" rel="noopener">Spring Boot 在后端如何控制前端 Vue 中菜单动态加载？</a></li><li><a href="https://mp.weixin.qq.com/s/7KftnJRj-3xnB3Eo-eUhbw" target="_blank" rel="noopener">手把手教你 Spring Boot 整合 Redis</a></li><li><a href="https://mp.weixin.qq.com/s/FoNVyAR1BkYfutFq9sjJNQ" target="_blank" rel="noopener">新版微人事部署教程来啦</a></li></ol><h2 id="优质投稿"><a href="#优质投稿" class="headerlink" title="优质投稿"></a>优质投稿</h2><ol><li><a href="https://mp.weixin.qq.com/s/Tup0cP2ZCdzodD8790Hr1w" target="_blank" rel="noopener">Spring Security 工作原理概览</a></li><li><a href="https://mp.weixin.qq.com/s/_szH8aN6HDR_1Z5Nyu4pmA" target="_blank" rel="noopener">MySQL复合索引和单列索引的单表查询分析</a></li><li><a href="https://mp.weixin.qq.com/s/r52hmD71TtiJjlOzQUvRlA" target="_blank" rel="noopener">干货推荐|Java并发编程核心概念一览，面试必备！</a></li><li><a href="https://mp.weixin.qq.com/s/7Dod-NcukPjYuQizGEdZdg" target="_blank" rel="noopener">面试干货 | Java 能否自定义一个类叫 java.lang.System？</a></li><li><a href="https://mp.weixin.qq.com/s/KoAUQm1-FXbi2WObrH3DOw" target="_blank" rel="noopener">Java 中的 jar ，天天见，可是你知道它的运行机制吗？</a></li><li><a href="https://mp.weixin.qq.com/s/U9WGULQoxdtWXGng_dpOdA" target="_blank" rel="noopener">干货 | 鸟瞰 MySQL，唬住面试官！</a></li><li><a href="https://mp.weixin.qq.com/s/8LhYFMQYfWfcDIti5qLMoA" target="_blank" rel="noopener">读者来稿：想和你聊聊 TCC</a></li></ol><p>好了，小伙伴们收藏好这篇文章，就不怕再也找不到松哥 2019 年的原创干货了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;公众号的文章改整理一下了，老有小伙伴表示文章找不到，确实是这样，公众号的文章看过了没消化，后来再想找到有点难，有的小伙伴机智的收藏了一下，但是因为收藏夹里的东西太多了，后来还是不好找。&lt;/p&gt;
    
    </summary>
    
      <category term="2019" scheme="http://www.javaboy.org/categories/2019/"/>
    
    
      <category term="2019-article" scheme="http://www.javaboy.org/tags/2019-article/"/>
    
  </entry>
  
  <entry>
    <title>2019 ，值了</title>
    <link href="http://www.javaboy.org/2020/0101/2019-life.html"/>
    <id>http://www.javaboy.org/2020/0101/2019-life.html</id>
    <published>2020-01-01T01:25:25.000Z</published>
    <updated>2020-01-10T02:03:56.747Z</updated>
    
    <content type="html"><![CDATA[<p>松哥是一个超级没有安全感的人，这可能和小时候的经历有关。</p><p>工作之后，互联网行业见过了太多的裁员与公司倒闭，这些事情，松哥自己都经历过好几波：</p><a id="more"></a><ul><li><a href="https://mp.weixin.qq.com/s/CGK8Labju1CjdkI3omgz-g" target="_blank" rel="noopener">搬砖不易，和大家聊聊松哥经历过的两次裁员</a></li><li><a href="https://mp.weixin.qq.com/s/qGFo2MKkD0AObBJDPR8veQ" target="_blank" rel="noopener">公司倒闭 1 年了，而我当年的项目上了 GitHub 热榜</a></li></ul><p>因此，从刚刚开始工作，就没敢放松警惕，一直在不断学习，不断的提高，只有不断的学习，不断的输出技术，才会让我有一点点安全感，才会感到踏实。</p><p>但是在 2019 年之前，我从来没想过可以凭技术输出赚钱，那个时候，我只是想凭着技术输出，获取一些技术影响力，帮助自己在跳槽的时候加分，化解职场风险（我的第一次跳槽就是因写博客结缘，对方的负责人通过 CSDN 博客找到我，给出了翻倍的薪水，参见：<a href="https://mp.weixin.qq.com/s/Zx4jiw5QVv3CBa87_K9_Gw" target="_blank" rel="noopener">一个转行程序员的买房经历</a>），不停的技术输出只是为了让我在找工作的时候更加从容。</p><p>但是在 3 月份，华为组织了一场云享专家与 MVP 的线下技术交流活动，活动中认识了纯洁的微笑，活动结束后和大佬约了个饭，微笑哥和我聊了公众号的事情，对我来说，就像打开了一扇新大门，于是从 3 月份开始，就认认真真开始做公众号，技术输出，到现在，坚持了差不多十个月了，公众号上的收获可能是 2019 最大的收获。</p><p>当然除了公众号，还有视频教程、新书等，接下来我想从这几个方面和大家聊聊我的 2019。</p><h2 id="关于书"><a href="#关于书" class="headerlink" title="关于书"></a>关于书</h2><p>其实我一直有点自卑，去年虽然辛辛苦苦写了书，但是信心不足，新书刚刚开始销售的时候，我心里想着首印能够卖完就算不错了。</p><p>没想到的是，这本书还比较受小伙伴们的欢迎，以至于后来加印多次。当然这也可能是和清华大学出版社强大的教材销售渠道有关，因为有不少小伙伴加我微信表示这本书他们在学校有用到（<a href="https://mp.weixin.qq.com/s/IJZukUhu-Rec8lF9KQseoQ" target="_blank" rel="noopener">我的第一本书，被选作大学教材了！</a>）。</p><p>不过老实说，写书其实不挣钱，技术图书出版社给到作者的稿酬基本都是 8%，也就是说一本售价 ¥70 的书，到作者手上就是 ¥5.6，再扣除个人所得税，还不到这个数。找过我的几家出版社，我打听了下，基本都是这个样子，所以你会看到，相比于写书，有不少作者宁愿去一些平台上出一些在线课程。</p><p>不过写书也有一些其他好处，例如可以和人吹牛。松哥因为这本书，结识了很多大佬，也认识了在座的各位小伙伴，这真是一件让人超级满足的事情。</p><h2 id="关于视频"><a href="#关于视频" class="headerlink" title="关于视频"></a>关于视频</h2><p>视频的成绩，有点出乎我的意料。</p><p>2 月份刚从老家回到深圳的时候，我就想针对书录制一套视频教程，但是一集都没录完，就放弃了，太费事了。</p><p>后来从 3 月份开始做公众号之后，我也学着其他大佬一样，开通了我自己的知识星球（Java 达摩院），出乎我意料的是，开通的头一天，就有十来个小伙伴加入了，感觉都是真爱呀。</p><p>一开始星球的定位就是给大家解决问题，聊一聊前后端分离，分享一些资源，后来发现这条路根本走不通，很多时候，大家的问题不是一言两语能搞定的，除非是一些非常典型的问题。等到六月份的时候，我一度想关闭星球，因为我觉得很难在星球上给大家提供有价值的东西，就这样犹犹豫豫到了 7 月。7 月份的时候，由于 Spring Cloud 专栏写完了，周末时间又腾出来了，加上那段时间有不少小伙伴问松哥有没有 Spring Boot 视频，于是我就下定决心，决定认认真真录一套和书配套的视频教程。</p><p>出乎我意料的是，这套视频非常受小伙伴们欢迎，截止到昨天，视频已经卖出了 1000+ 份，其中有 1/4 的小伙伴都是经朋友或者同学的介绍来的，这也给了我极大的信心，决定认认真真把这套视频教程搞完。</p><p>关于视频教程，我还想多说一句：录制视频教程，一开始当然是为了赚点外快。但是在我心里，比赚钱更重要的是小伙伴的认可，如果你认可我的 vhr，认可我的技术文章，那你买视频，我不会让大家失望，这是双赢；如果不认可的话，我其实是非常不建议购买我的视频教程的。</p><h2 id="关于公众号"><a href="#关于公众号" class="headerlink" title="关于公众号"></a>关于公众号</h2><p>公众号是我 2017 年申请的，到 2019 年 3 月份才 5200+ 读者，然后从 3 月份开始，下定决心做之后，用户的增长一直还比较可观，上周刚刚突破了 3W。这一路的历程也是比较艰辛的（<a href="https://mp.weixin.qq.com/s/Y7IqyoL140l1YV0AuJLD1w" target="_blank" rel="noopener">一个小小的里程碑！</a>）.</p><p>公众号 2019 年的原创技术文章大概也在 100 多篇，平均三天一篇技术干货。这些文章我两天会抽空整理好，制作好一个索引，方便大家查找。</p><p>公众号对我来说更重要的意义可能可能不仅仅是读者的增长，更在于我总算 GET 到了流量时代的商业模式了，以前都是一窍不通，而现在总算打开了新局面，在我了解到公众号的玩法之前，对于副业赚钱，我一直停留在接私活上，这也导致我在刚工作的几年里，做了好几个私活，做完之后，慢慢发现外包赚的都是辛苦钱，都是牺牲自己的业余休息时间赚来的，但是没办法，没有其他的副业思路，直到 2019 开始认认真真搞公众号。</p><p>说到公众号这个事情，我觉得我是起了个大早赶了个晚集。我 2014 年就做过公众号后台开发，那个时候大学还没毕业，2017 年注册了自己的公众号，但是一直都不懂这个东西怎么玩，直到 2019 才开窍，用后知后觉来形容一点都不为过。不过在坚持了 10 个多月之后，总算见到了一点点黎明前的曙光。</p><p>公众号的事，未来还要仰仗各位小伙伴多多支持，当然松哥也会提供更多的干货出来，后面也会和大家公布 2020 年的干货计划。</p><h2 id="关于博客"><a href="#关于博客" class="headerlink" title="关于博客"></a>关于博客</h2><p>清明节期间，松哥终于搭建好了自己的个人博客，有了一个更加专业的展示自己博客内容的平台。从刚开始的每日个位数的 PV，到现在每日超过 2000 PV，也是不易。博客的流量谷歌搜索占了大头，因为博客托管在 GitHub 上，所以来自百度的流量比较少，不过这也导致了一个问题，就是博客的访问量比较慢，最近也打算抽空把博客迁到国内的云平台上。</p><p>松哥个人博客，目前做好了不少站点，对 Spring Boot+Spring Cloud+前后端分离感兴趣的小伙伴，这绝对是一个很棒的学习资源。</p><ul><li><a href="http://www.javaboy.org">http://www.javaboy.org</a></li><li><a href="http://springboot.javaboy.org" target="_blank" rel="noopener">http://springboot.javaboy.org</a></li><li><a href="http://spring.javaboy.org" target="_blank" rel="noopener">http://spring.javaboy.org</a></li><li><a href="http://springmvc.javaboy.org" target="_blank" rel="noopener">http://springmvc.javaboy.org</a></li><li><a href="http://mybatis.javaboy.org" target="_blank" rel="noopener">http://mybatis.javaboy.org</a></li><li><a href="http://maven.javaboy.org" target="_blank" rel="noopener">http://maven.javaboy.org</a></li></ul><p>2020 还有很多新的计划，小伙伴们关注就对了哈哈。</p><h2 id="关于工作"><a href="#关于工作" class="headerlink" title="关于工作"></a>关于工作</h2><p>忘了以前在哪里看到的，有人说副业做的好的人，本职工作都不会差，副业做不好的话，本职工作也不能做很好，所以本职工作就不和大家细聊了，对得起自己，对得起老板，这个就不和大家细聊了。</p><p>2019 年差不多就是这些事情吧，2020 年有很多干货计划，小伙伴们敬请期待吧。</p><p>2019 年，小伙伴们要是有值得铭记的故事，欢迎投稿。好的文章，松哥可能会送你一套松哥自制的 Spring Boot 视频教程哦。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;松哥是一个超级没有安全感的人，这可能和小时候的经历有关。&lt;/p&gt;
&lt;p&gt;工作之后，互联网行业见过了太多的裁员与公司倒闭，这些事情，松哥自己都经历过好几波：&lt;/p&gt;
    
    </summary>
    
      <category term="life" scheme="http://www.javaboy.org/categories/life/"/>
    
    
      <category term="life" scheme="http://www.javaboy.org/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot + Vue 视频教程喜迎大结局</title>
    <link href="http://www.javaboy.org/2019/1231/springboot-video.html"/>
    <id>http://www.javaboy.org/2019/1231/springboot-video.html</id>
    <published>2019-12-31T01:23:23.000Z</published>
    <updated>2020-01-10T01:55:23.147Z</updated>
    
    <content type="html"><![CDATA[<p>松哥的自己录制的 Spring Boot+微人事项目在经过几个月的加班加点后，终于迎来了大结局。</p><a id="more"></a><p>这套视频目前大概一共有 <strong>270 集，80 个小时</strong>左右，具体的大家可以参考下面这个目录：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br></pre></td><td class="code"><pre><span class="line">├─第 0 章 准备工作</span><br><span class="line">│      01.开篇_1.mp4</span><br><span class="line">│      02.回顾 XML 配置 Spring.mp4</span><br><span class="line">│      03.Java配置SSM-1.mp4</span><br><span class="line">│      04.Java配置SSM-2.mp4</span><br><span class="line">│      </span><br><span class="line">├─第 01 章 Spring Boot 入门</span><br><span class="line">│      01.SpringBoot介绍.mp4</span><br><span class="line">│      02.SpringBoot项目的三种创建方式.mp4</span><br><span class="line">│      03.SpringBoot启动类上的注解.mp4</span><br><span class="line">│      04.SpringBoot中parent的理解-1.mp4</span><br><span class="line">│      05.SpringBoot中parent的理解-2.mp4</span><br><span class="line">│      </span><br><span class="line">├─第 02 章 Spring Boot 基础配置</span><br><span class="line">│      01.Banner配置.mp4</span><br><span class="line">│      02.容器相关配置.mp4</span><br><span class="line">│      03.Spring属性注入.mp4</span><br><span class="line">│      04.类型安全的属性注入.mp4</span><br><span class="line">│      05.YAML配置.mp4</span><br><span class="line">│      06.Profile.mp4</span><br><span class="line">│      </span><br><span class="line">├─第 03 章 Spring Boot 整合视图层技术</span><br><span class="line">│      01.SpringBoot 整合视图层技术.mp4</span><br><span class="line">│      02.Spring Boot 整合 Freemarker.mp4</span><br><span class="line">│      03.Feemarker 常用指令.mp4</span><br><span class="line">│      04.整合 Thymeleaf.mp4</span><br><span class="line">│      05.整合 jsp.mp4</span><br><span class="line">│      </span><br><span class="line">├─第 04 章 Spring Boot 整合 Web 开发</span><br><span class="line">│      01.Spring Boot 默认的 JSON 解析方案.mp4</span><br><span class="line">│      02.使用 Gson 处理 JSON.mp4</span><br><span class="line">│      03.Spring Boot 整合 Fastjson.mp4</span><br><span class="line">│      04.Spring Boot 默认的静态资源访问方案.mp4</span><br><span class="line">│      05.两种方式自定义静态资源位置.mp4</span><br><span class="line">│      06.Spring Boot 文件上传.mp4</span><br><span class="line">│      07.Ajax 实现文件上传.mp4</span><br><span class="line">│      08.多文件上传.mp4</span><br><span class="line">│      09.@ControllerAdvice 的三种用法.mp4</span><br><span class="line">│      10.@ControllerAdvice 处理全局异常_1.mp4</span><br><span class="line">│      11.@ControllerAdvice 预设全局数据.mp4</span><br><span class="line">│      12.@ControllerAdvice 请求参数预处理.mp4</span><br><span class="line">│      13.Spring Boot 自定义错误页.mp4</span><br><span class="line">│      14.Spring Boot 异常处理源码分析.mp4</span><br><span class="line">│      15.Spring Boot 自定义异常数据.mp4</span><br><span class="line">│      16.Spring Boot 自定义异常视图.mp4</span><br><span class="line">│      17.Spring Boot 通过 CORS 实现跨域.mp4</span><br><span class="line">│      18.Spring Boot 中加载 XML 配置.mp4</span><br><span class="line">│      19.Spring Boot 中注册拦截器.mp4</span><br><span class="line">│      20.CommandLineRunner 实现系统启动任务.mp4</span><br><span class="line">│      21.ApplicationRunner 实现系统启动任务.mp4</span><br><span class="line">│      22.Spring Boot 整合 Web 基础组件.mp4</span><br><span class="line">│      23.Spring Boot 路径映射.mp4</span><br><span class="line">│      24.Spring Boot 中使用类型转换器.mp4</span><br><span class="line">│      25.Spring Boot 整合 AOP.mp4</span><br><span class="line">│      26.Spring Boot 自定义欢迎页.mp4</span><br><span class="line">│      27.Spring Boot 自定义 favicon.mp4</span><br><span class="line">│      28.Spring Boot 除去自动化配置.mp4</span><br><span class="line">│      </span><br><span class="line">├─第 05 章 Spring Boot 整合持久层技术</span><br><span class="line">│      01.Spring Boot 整合持久层技术.mp4</span><br><span class="line">│      02.Spring Boot 整合 JdbcTemplate.mp4</span><br><span class="line">│      03.Spring Boot 整合 JdbcTemplate 多数据源.mp4</span><br><span class="line">│      04.Spring Boot 整合 MyBatis.mp4</span><br><span class="line">│      05.Spring Boot 整合 MyBatis 多数据源.mp4</span><br><span class="line">│      06.Spring Data 和 Jpa 简介.mp4</span><br><span class="line">│      07.Spring Boot 整合 Spring Data Jpa.mp4</span><br><span class="line">│      08.Spring Data Jpa 关键字定义查询方法.mp4</span><br><span class="line">│      09.Spring Data Jpa 自定义查询 SQL.mp4</span><br><span class="line">│      10.Spring Data Jpa 自定义数据修改 SQL.mp4</span><br><span class="line">│      11.Spring Boot 整合 Jpa 多数据源.mp4</span><br><span class="line">│      </span><br><span class="line">├─第 06 章 Spring Boot 整合 NoSQL</span><br><span class="line">│      01.Spring Boot 整合 NoSQL.mp4</span><br><span class="line">│      02.Spring Boot 整合 Redis.mp4</span><br><span class="line">│      03.为什么需要 session 共享.mp4</span><br><span class="line">│      04.Nginx 简介.mp4</span><br><span class="line">│      05.Spring Session 实现 Session 共享.mp4</span><br><span class="line">│      06.引入 Nginx 负载均衡.mp4</span><br><span class="line">│      07.MongoDB 安装.mp4</span><br><span class="line">│      08.Spring Boot 整合 MongoDB.mp4</span><br><span class="line">│      </span><br><span class="line">├─第 07 章 构建 REST 服务</span><br><span class="line">│      01.RESTful 简介.mp4</span><br><span class="line">│      02.搭建 Jpa 环境.mp4</span><br><span class="line">│      03.Spring Boot 中 REST 默认提供的增删改查.mp4</span><br><span class="line">│      04.Spring Boot 中 REST 自定义查询方法.mp4</span><br><span class="line">│      05.REST 配置 CORS.mp4</span><br><span class="line">│      06.自定义 REST 配置.mp4</span><br><span class="line">│      07.MongoDB 实现 REST.mp4</span><br><span class="line">│      </span><br><span class="line">├─第 08 章 开发者工具与单元测试</span><br><span class="line">│      01.Devtools 简介.mp4</span><br><span class="line">│      02.devtools 工作原理-.mp4</span><br><span class="line">│      03.自定义监控资源.mp4</span><br><span class="line">│      04.LiveReload 自动刷新页面.mp4</span><br><span class="line">│      05.禁用自动重启.mp4</span><br><span class="line">│      06.项目重启中的全局配置.mp4</span><br><span class="line">│      07.Spring Boot 单元测试介绍.mp4</span><br><span class="line">│      08.Service 测试.mp4</span><br><span class="line">│      09.Controller 测试.mp4</span><br><span class="line">│      10.JSON 测试.mp4</span><br><span class="line">│      </span><br><span class="line">├─第 09 章 Spring Boot 缓存</span><br><span class="line">│      01.Spring Cache 介绍.mp4</span><br><span class="line">│      02.Spring Cache 整合 Redis.mp4</span><br><span class="line">│      03.Spring Cache 整合 Ehcache.mp4</span><br><span class="line">│      </span><br><span class="line">├─第 10 章 Spring Boot 安全管理</span><br><span class="line">│      01.安全管理介绍.mp4</span><br><span class="line">│      02.Spring  Security 初体验.mp4</span><br><span class="line">│      03.手工配置用户名密码.mp4</span><br><span class="line">│      04.HttpSecurity 配置.mp4</span><br><span class="line">│      05.登录表单详细配置.mp4</span><br><span class="line">│      06.注销登录配置.mp4</span><br><span class="line">│      07.多个 HttpSecurity.mp4</span><br><span class="line">│      08.密码加密.mp4</span><br><span class="line">│      09.方法安全.mp4</span><br><span class="line">│      10.基于数据库的认证.mp4</span><br><span class="line">│      11.角色继承.mp4</span><br><span class="line">│      12.动态配置权限.mp4</span><br><span class="line">│      13.OAuth2 简介.mp4</span><br><span class="line">│      14.Spring Security 结合 OAuth2.mp4</span><br><span class="line">│      15.整合 Shiro 方式一.mp4</span><br><span class="line">│      16.整合 Shiro 方式二.mp4</span><br><span class="line">│      17.Spring Security 使用 JSON 登录.mp4</span><br><span class="line">│      </span><br><span class="line">├─第 11 章 Spring Boot 整合 WebSocket</span><br><span class="line">│      01.WebSocket 介绍.mp4</span><br><span class="line">│      02.WebSocket 实现在线群聊.mp4</span><br><span class="line">│      03.WebSocket 实现在线单聊.mp4</span><br><span class="line">│      </span><br><span class="line">├─第 12 章 消息服务</span><br><span class="line">│      01.消息服务.mp4</span><br><span class="line">│      02.ActiveMQ 安装.mp4</span><br><span class="line">│      03.Spring Boot 整合 ActiveMQ.mp4</span><br><span class="line">│      04.RabbitMQ 简介并安装.mp4</span><br><span class="line">│      05.Spring Boot 整合 RabbitMQ.mp4</span><br><span class="line">│      </span><br><span class="line">├─第 13 章 企业开发</span><br><span class="line">│      01.邮件协议简介.mp4</span><br><span class="line">│      02.申请 QQ 邮箱授权码.mp4</span><br><span class="line">│      03.发送简单邮件.mp4</span><br><span class="line">│      04.发送带附件的邮件.mp4</span><br><span class="line">│      05.发送带图片资源的邮件.mp4</span><br><span class="line">│      06.Thymeleaf 做邮件模板.mp4</span><br><span class="line">│      07.Freemarker 做邮件模板.mp4</span><br><span class="line">│      08.Spring Boot 定时任务实现方案一(@Scheduled).mp4</span><br><span class="line">│      09.Spring Boot 定时任务实现方案二(Quartz).mp4</span><br><span class="line">│      10.Spring Boot 整合 Swagger2.mp4</span><br><span class="line">│      </span><br><span class="line">├─第 14 章 应用监控</span><br><span class="line">│      01.应用端点.mp4</span><br><span class="line">│      02.Health 端点.mp4</span><br><span class="line">│      03.Info 端点.mp4</span><br><span class="line">│      04.监控信息可视化.mp4</span><br><span class="line">│      05.邮件报警.mp4</span><br><span class="line">│      </span><br><span class="line">├─第 15 章 项目构建与部署</span><br><span class="line">│      01.jar.mp4</span><br><span class="line">│      02.war.mp4</span><br><span class="line">│      </span><br><span class="line">└─第 16 章 微人事项目实战</span><br><span class="line">        001.项目介绍.mp4</span><br><span class="line">        002.项目技术架构.mp4</span><br><span class="line">        003.Vue 学习规划.mp4</span><br><span class="line">        004.Vue 初体验.mp4</span><br><span class="line">        005.Vue 条件指令.mp4</span><br><span class="line">        006.Vue 循环指令.mp4</span><br><span class="line">        007.Vue 处理用户输入.mp4</span><br><span class="line">        008.Vue 处理用户输入.mp4</span><br><span class="line">        009.Vue 组件初体验.mp4</span><br><span class="line">        010.Vue 实例.mp4</span><br><span class="line">        011.Vue 模板语法.mp4</span><br><span class="line">        012.Vue 计算属性.mp4</span><br><span class="line">        013.Vue 侦听器.mp4</span><br><span class="line">        014.Vue Class 绑定.mp4</span><br><span class="line">        015.Vue Style 绑定.mp4</span><br><span class="line">        016.Vue 条件渲染.mp4</span><br><span class="line">        017.Vue 列表渲染.mp4</span><br><span class="line">        018.Vue 事件处理.mp4</span><br><span class="line">        019.Vue 表单输入绑定.mp4</span><br><span class="line">        020.Vue 组件基础.mp4</span><br><span class="line">        021.Vue 总结.mp4</span><br><span class="line">        022.Spa 单页面应用介绍.mp4</span><br><span class="line">        023.node 和 npm.mp4</span><br><span class="line">        024.创建一个单页面应用.mp4</span><br><span class="line">        025.Vue 工程目录介绍.mp4</span><br><span class="line">        026.Vue 单页面项目运行.mp4</span><br><span class="line">        027.Vue 工程代码解析.mp4</span><br><span class="line">        028.vue-cli3 构建 Vue 项目.mp4</span><br><span class="line">        029.vue-cli3 项目结构介绍.mp4</span><br><span class="line">        030.微人事登录页面制作.mp4</span><br><span class="line">        031.处理前端登录事件.mp4</span><br><span class="line">        032.服务端环境搭建.mp4</span><br><span class="line">        033.服务端登录接口制作(一).mp4</span><br><span class="line">        034.服务端登录接口制作(二).mp4</span><br><span class="line">        035.前后端接口对接.mp4</span><br><span class="line">        036.登录页面跳转.mp4</span><br><span class="line">        037.前端请求方法封装.mp4</span><br><span class="line">        038.Home 页 title 制作.mp4</span><br><span class="line">        039.左边导航菜单制作.mp4</span><br><span class="line">        040.菜单项接口介绍.mp4</span><br><span class="line">        041.服务端菜单接口设计.mp4</span><br><span class="line">        042.Vuex 介绍与安装.mp4</span><br><span class="line">        043.Vuex 配置.mp4</span><br><span class="line">        044.菜单请求工具类封装.mp4</span><br><span class="line">        045.前端页面添加并完善菜单请求.mp4</span><br><span class="line">        046.左边导航菜单加载.mp4</span><br><span class="line">        047.页面加载问题解决.mp4</span><br><span class="line">        048.微人事首页完善.mp4</span><br><span class="line">        049.前后端分离权限管理思路探讨.mp4</span><br><span class="line">        050.后端接口权限设计.mp4</span><br><span class="line">        051.权限问题解决.mp4</span><br><span class="line">        052.权限管理继续完善.mp4</span><br><span class="line">        053.基础信息设置.mp4</span><br><span class="line">        054.职位管理前端页面设计.mp4</span><br><span class="line">        055.职位管理后端接口设计.mp4</span><br><span class="line">        056.职位管理前后端接口对接.mp4</span><br><span class="line">        057.职位管理前后端对接问题解决.mp4</span><br><span class="line">        058.职位修改操作.mp4</span><br><span class="line">        059.职位批量删除实现.mp4</span><br><span class="line">        060.职称管理前端页面设计.mp4</span><br><span class="line">        061.职称管理后端接口设计.mp4</span><br><span class="line">        062.职称管理前后端接口对接.mp4</span><br><span class="line">        063.职称批量删除实现.mp4</span><br><span class="line">        064.解决职位管理中的一个小问题.mp4</span><br><span class="line">        065.权限组前端页面制作.mp4</span><br><span class="line">        066.权限组用户角色前后端接口对接.mp4</span><br><span class="line">        067.权限组菜单树展示.mp4</span><br><span class="line">        068.菜单角色关系修改.mp4</span><br><span class="line">        069.权限组角色添加.mp4</span><br><span class="line">        070.权限组角色删除.mp4</span><br><span class="line">        071.[补充]登录问题完善.mp4</span><br><span class="line">        072.部门管理数据展示和搜索.mp4</span><br><span class="line">        073.部门树展示添加与删除.mp4</span><br><span class="line">        074.部门树的动态修改[添加].mp4</span><br><span class="line">        075.部门树的动态修改[删除].mp4</span><br><span class="line">        076.操作员管理接口设计.mp4</span><br><span class="line">        077.操作员管理页面展示.mp4</span><br><span class="line">        078.用户状态更新操作.mp4</span><br><span class="line">        079.操作员角色更新.mp4</span><br><span class="line">        080.操作员搜索.mp4</span><br><span class="line">        081.操作员删除.mp4</span><br><span class="line">        082.[补充]增加数据加载进度条.mp4</span><br><span class="line">        083.员工管理后端接口设计.mp4</span><br><span class="line">        084.员工管理工具栏展示.mp4</span><br><span class="line">        085.员工管理员工数据展示.mp4</span><br><span class="line">        086.员工管理员工数据分页.mp4</span><br><span class="line">        087.员工管理之员工搜索.mp4</span><br><span class="line">        088.员工添加接口设计.mp4</span><br><span class="line">        089.员工添加页面绘制.mp4</span><br><span class="line">        090.员工添加页面下拉框数据加载.mp4</span><br><span class="line">        091.员工添加页面工号加载.mp4</span><br><span class="line">        092.员工添加页面部门列表展示.mp4</span><br><span class="line">        093.员工添加.mp4</span><br><span class="line">        094.员工添加数据校验.mp4</span><br><span class="line">        095.[问题处理]部门管理问题处理.mp4</span><br><span class="line">        096.员工删除.mp4</span><br><span class="line">        097.员工信息更新.mp4</span><br><span class="line">        098.[问题处理]自动计算合同期限问题.mp4</span><br><span class="line">        099.[问题处理]权限组取消角色的所有权限.mp4</span><br><span class="line">        100.员工数据导出(Excel 导出).mp4</span><br><span class="line">        101.员工数据导入(Excel 上传).mp4</span><br><span class="line">        102.员工数据导入(Excel 解析).mp4</span><br><span class="line">        103.员工数据导入(插入数据库).mp4</span><br><span class="line">        104.员工高级搜索页面设计.mp4</span><br><span class="line">        105.员工高级搜索页面动画.mp4</span><br><span class="line">        106.禁用普通搜索.mp4</span><br><span class="line">        107.员工高级搜索功能.mp4</span><br><span class="line">        108.项目模块化改造.mp4</span><br><span class="line">        109.准备 RabbitMQ 消息中间件.mp4</span><br><span class="line">        110.搭建邮件服务.mp4</span><br><span class="line">        111.自动发送员工入职欢迎邮件.mp4</span><br><span class="line">        112.[号外]开发环境的变化.mp4</span><br><span class="line">        113.工资账套服务端接口设计.mp4</span><br><span class="line">        114.工资账套前端页面设计.mp4</span><br><span class="line">        115.添加工资账套页面设计.mp4</span><br><span class="line">        116.工资账套添加页面设计.mp4</span><br><span class="line">        117.工资账套添加前后端接口对接.mp4</span><br><span class="line">        118.工资账套删除.mp4</span><br><span class="line">        119.工资账套编辑与刷新.mp4</span><br><span class="line">        120.员工账套数据展示.mp4</span><br><span class="line">        121.员工工资账套调整页面设计.mp4</span><br><span class="line">        122.员工工资账套更新.mp4</span><br><span class="line">        123.员工工资账套设置分页.mp4</span><br><span class="line">        124.修改工资账套问题解决.mp4</span><br><span class="line">        125.聊天页面方案介绍.mp4</span><br><span class="line">        126.项目首页增加聊天入口.mp4</span><br><span class="line">        127.聊天页面绘制.mp4</span><br><span class="line">        128.调整聊天页面个人信息.mp4</span><br><span class="line">        129.用户列表展示.mp4</span><br><span class="line">        130.服务端消息处理配置.mp4</span><br><span class="line">        131.前端的聊天配置.mp4</span><br><span class="line">        132.消息首发测试.mp4</span><br><span class="line">        133.用户列表优化.mp4</span><br><span class="line">        134.消息发送处理.mp4</span><br><span class="line">        135.消息接收处理.mp4</span><br><span class="line">        136.聊天数据展示.mp4</span><br><span class="line">        137.聊天消息自动刷新.mp4</span><br><span class="line">        138.聊天完善.mp4</span><br><span class="line">        139.聊天消息提示.mp4</span><br><span class="line">        140.新消息提示红点.mp4</span><br><span class="line">        141.聊天消息动态提示.mp4</span><br></pre></td></tr></table></figure><p>这套视频的前 15 章主要是讲了 Spring Boot 的基本用法，第 16 章主要是讲微人事项目，微人事项目是从零开始手把手带领大家来做的，这个手把手也包括前端 Vue，视频的具体内容，可以参考上面的目录。</p><p>Spring Boot 录完之后，接下来就要开始更新 Spring Cloud 了，松哥最近也是在积极准备中，估计元旦之后就可以开始更新 Spring Cloud 了。</p><p><strong>按照我们之前的约定，每有一套课程完结的时候，就会调整一下价格，元旦临近，我们就在元旦之后再调整。也就是 12 月 31 和 1 月 1 号，依然是 199，从 1 月 2 号开始，199 元（老实说 199 也不贵，这么多视频，这么多内容，在各个视频平台对比下就知道了）。</strong></p><p>关于视频的评价，松哥之前秀过好多次了，这次就再秀一把，有不少小伙伴都是朋友推荐来的，相比于赚钱，小伙伴们的认可更让我开心：</p><p><img src="http://www.javaboy.org/images/other/103-1.png" alt><br><img src="http://www.javaboy.org/images/other/103-2.jpg" alt><br><img src="http://www.javaboy.org/images/other/103-3.jpg" alt><br><img src="http://www.javaboy.org/images/other/103-4.jpg" alt></p><p>另外你可能无法想象，在购买人群中，竟然还有西交大的老师：</p><p><img src="http://www.javaboy.org/images/other/103-6.jpg" alt></p><p>还有这是上次松哥推视频的时候小伙伴们的评价，可以看到看了视频的小伙伴都是非常认可松哥的视频教程的：</p><p><img src="http://www.javaboy.org/images/other/103-5.png" alt></p><p>好了，我就不炫耀了。下面我列举了小伙伴们关于这套视频常见的一些问题：</p><p><strong>Q1：视频放在哪里，怎么播放？</strong></p><p>视频放在百度网盘上，需要自己下载后一机一码授权播放。</p><p><strong>Q2：视频为什么不支持在线播放？</strong></p><p>松哥有在某平台发布视频课程（很短，讲了几个知识点，只有两三个小时），因为课程未上线，暂时不方便透露。不过可以告诉大家的是，我在该平台发布的课程，平台抽 6 成，我拿 4 成，也就是说，这个 199 的课程，如果放到平台上销售，至少卖 400 块钱；另一方面，这也不仅仅是钱的事，即使可以放在平台上，我也不会拿去在平台上销售的。</p><p><strong>Q3：以后录的视频都可以看吗？</strong></p><p>这次松哥一共计划出四套视频课程，Spring Boot、微人事、Spring Cloud 以及 Redis，其中前两个目前已经录完了，Spring Cloud 将从 1 月份开始更新，Spring Cloud 录完之后，录 Redis，也就是 199 一共可以看这四套视频。</p><p><strong>Q4：可以砍价吗？</strong></p><p>不可以。首先因为 199 就不贵，即使不算后面的 Spring Cloud 和 Redis，单纯就现在的 Spring Boot+微人事，<strong>270 集，80 个小时</strong>，199 就不贵，更何况未来还有 Spring Cloud 和 Redis。上次有个小伙伴，加了我微信后，上来就问 60 卖不卖，松哥这暴脾气，二话没说就拉黑了。我是兼职录的视频，起早贪黑几个月录了这些视频，在他眼里就值 60 块钱，那就是我的技术在他眼里就值这点钱，我觉得这是对一个程序员最大的侮辱，没法忍。</p><p><strong>Q5：星球是怎么回事？</strong></p><p>星球主要是用来更新视频下载地址的地方，大家在这套视频教程时遇到问题时，都可以在星球上提问。</p><p><strong>Q6：视频会搞活动吗？</strong></p><p>自从我开始录视频以来，从来没有过促销活动，以前没有，以后也不会有。</p><p><strong>Q7：付费视频和免费视频有什么区别？</strong></p><p>免费视频是我在网上搜集别人录制的视频，大家在公众号后台回复 <code>2TB</code> 可以获取，付费视频是我自己录制的，录完之后都有二次剪辑，去噪，花费了很大功夫，因此是付费的。</p><p><strong>Q8：看视频有问题可以问吗？</strong></p><p>参考 Q6。</p><p><strong>Q9：这套视频适合哪些人看？</strong></p><p>学习这套视频，后端需要有 SSM 基础，前端需要有 js 基础（可以不懂 Vue，第十六章视频会讲）。要是不懂 SSM，可以先看松哥之前手敲 5 万余字的 SSM 教程。</p><p><strong>Q10：可以只买其中一套吗？</strong></p><p>可以，但是价格不变。因为购买单独的一部分，我要给你单独加密，单独上传，单独设置课程，单独生成授权码，这一套流程下来，费时费力，所以价格不变。</p><p>好了，加松哥微信，发红包 199，和 1000+ 小伙伴一起撸 Spring Boot + Vue 以及微人事项目吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;松哥的自己录制的 Spring Boot+微人事项目在经过几个月的加班加点后，终于迎来了大结局。&lt;/p&gt;
    
    </summary>
    
      <category term="Spring Boot" scheme="http://www.javaboy.org/categories/Spring-Boot/"/>
    
    
      <category term="Spring Boot" scheme="http://www.javaboy.org/tags/Spring-Boot/"/>
    
      <category term="Vue" scheme="http://www.javaboy.org/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis 教程姗姗来迟，松哥手码的 SSM 教程总算齐活了，小伙伴们可以下载啦</title>
    <link href="http://www.javaboy.org/2019/1230/mybatis-guide.html"/>
    <id>http://www.javaboy.org/2019/1230/mybatis-guide.html</id>
    <published>2019-12-30T01:23:06.000Z</published>
    <updated>2020-01-10T01:51:17.545Z</updated>
    
    <content type="html"><![CDATA[<p>上周末去了趟南京，昨晚到家都十二点多了，今天一大早起来整理 MyBatis 教程，现在总算搞好了，至此，松哥自制的 SSM 教程现在总算齐活了。</p><a id="more"></a><p>这套 Maven+SSM 教程总页数在 230 页左右，总字数在 5 万字左右，带领刚入行的小伙伴巩固下知识点，或者没接触过 SSM 的小伙伴入个门绝对是够用了。</p><p>其中，Maven、Spring、SpringMVC 的教程之前都已经发布过了：</p><ul><li><a href="https://mp.weixin.qq.com/s/CyMXvY-IzY-69Q_uYxxXMA" target="_blank" rel="noopener">Maven 教程</a></li><li><a href="https://mp.weixin.qq.com/s/4N0qWTHM2CuUFRoBIBUHwQ" target="_blank" rel="noopener">Spring 教程</a></li><li><a href="https://mp.weixin.qq.com/s/4v7VPjSjf5DW86I3ecptFw" target="_blank" rel="noopener">SpringMVC 教程</a></li></ul><p>今天要发布的这份 MyBatis 教程，松哥和大家详细聊了 MyBatis 一些常见用法，如 基本配置、一对一查询、一对多查询、Mapper 配置、逆向工程等，不过时间仓促，还有一些更加高级的玩法松哥在未来也会慢慢完善。</p><p>和前面的教程一样，这个 MyBatis 教程松哥也提供了线上版和离线版，线上版地址：</p><ul><li><a href="http://mybatis.javaboy.org" target="_blank" rel="noopener">http://mybatis.javaboy.org</a></li></ul><p><img src="http://www.javaboy.org/images/other/101-1.png" alt></p><p>离线版是一个 pdf 文档，小伙伴们在松哥公众号后台回复 mybatis 可以获取离线版下载地址。</p><p><img src="http://www.javaboy.org/images/other/101-2.png" alt><br><img src="http://www.javaboy.org/images/other/101-3.png" alt></p><p><strong>注意</strong></p><blockquote><p>由于这个教程里涉及到的代码 Demo 比较多，我看了一下生成的 pdf，代码的排版不是很好看，换行有一点点乱，不方便阅读，因此建议大家通过在线版学习，也就是松哥上面给出来的那个网站。在线版网速可能有一点点慢，松哥后期也会对这个问题进行处理，请小伙伴们留意星球公告哦。</p></blockquote><p>现在，松哥自己的站点，已经做好的有：</p><ul><li><a href="http://www.javaboy.org">http://www.javaboy.org</a></li><li><a href="http://springboot.javaboy.org" target="_blank" rel="noopener">http://springboot.javaboy.org</a></li><li><a href="http://maven.javaboy.org" target="_blank" rel="noopener">http://maven.javaboy.org</a></li><li><a href="http://spring.javaboy.org" target="_blank" rel="noopener">http://spring.javaboy.org</a></li><li><a href="http://springmvc.javaboy.org" target="_blank" rel="noopener">http://springmvc.javaboy.org</a></li><li><a href="http://mybatis.javaboy.org" target="_blank" rel="noopener">http://mybatis.javaboy.org</a></li></ul><p>未来还计划出：</p><ul><li><a href="http://shiro.javaboy.org" target="_blank" rel="noopener">http://shiro.javaboy.org</a></li><li><a href="http://mongodb.javaboy.org" target="_blank" rel="noopener">http://mongodb.javaboy.org</a></li><li><a href="http://redis.javaboy.org" target="_blank" rel="noopener">http://redis.javaboy.org</a></li><li><a href="http://elasticsearch.javaboy.org" target="_blank" rel="noopener">http://elasticsearch.javaboy.org</a></li><li>…</li></ul><p>小伙伴们敬请期待哦。</p><p>好了，MyBatis 撸起来吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上周末去了趟南京，昨晚到家都十二点多了，今天一大早起来整理 MyBatis 教程，现在总算搞好了，至此，松哥自制的 SSM 教程现在总算齐活了。&lt;/p&gt;
    
    </summary>
    
      <category term="MyBatis" scheme="http://www.javaboy.org/categories/MyBatis/"/>
    
    
      <category term="MyBatis" scheme="http://www.javaboy.org/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>两年了，微人事项目迎来了一次重大更新</title>
    <link href="http://www.javaboy.org/2019/1223/vhr.html"/>
    <id>http://www.javaboy.org/2019/1223/vhr.html</id>
    <published>2019-12-23T01:25:08.000Z</published>
    <updated>2020-01-10T02:03:07.259Z</updated>
    
    <content type="html"><![CDATA[<p>不知为什么，当我准备写这篇文章的时候，就想起下面这句台词：</p><p><img src="http://www.javaboy.org/images/other/99-3.jpg" alt><br><img src="http://www.javaboy.org/images/other/99-4.jpg" alt></p><p>从九月份到现在，三个月忙里偷闲，终于将微人事（<a href="https://github.com/lenve/vhr" target="_blank" rel="noopener">https://github.com/lenve/vhr</a>）重构了一遍。</p><a id="more"></a><p>第一版的微人事发布的时候，当时 Spring Boot2 还没出来，当时用的还是 Spring Boot1.5.x，Vue 当时倒是用的 Vue2，前端构建工具用的 vue-cli2，技术上来说，稍微有点老；另一方面大家看我在 GitHub 上的提交日志，应该可以看出来，第一版的微人事大概在不到两周的时间就搞出来了，所以里边有许多松哥自己也不是特别满意的地方，不过一直以来工作比较忙，晚上回到家也有很多事情要做，一直没空去优化重构微人事。</p><p>去年在我的书出版前夕，为了配合书里的 Demo，我将微人事的 Spring Boot 版本升级到 2，当时做了不少改动，不过这些改动主要集中在兼容性上，因为从 Spring Boot1 切换到 Spring Boot2，变化还是很大的，有很多地方的写法都不太一样，但是除了这些不兼容的地方之外，其他地方基本上就没动了。</p><p>随着时间的推移，我一直有重构微人事的冲动。</p><p>老实说，我对于继续在微人事中添加业务功能实在没什么兴趣，但是我非常想丰富微人事中涉及到的技术点，我希望能够将常见的企业级应用开发中涉及到的技术点，都在这个项目中体现出来，让这个项目成为小伙伴们掌握前后端分离开发的跳板，只要你掌握了这个项目中涉及到的技术点，那么在开发其他常规的企业级应用时，至少不会出现技术上的卡壳，这也是我做这个项目的初衷之一。</p><p>微人事从上线到现在，我了解到有不少小伙伴将微人事作为脚手架开发公司的商业项目，甚至有人加我微信，上来就问微人事是不是还有一个商业版，他想要购买。看到大家对这个项目这么感兴趣，我也终于按耐不住了，九月份的时候，由于要录制微人事的视频教程，于是趁机，边讲视频边重构，将整个项目重新过了一遍，终于在昨天，提交了新的版本到 GitHub 上。</p><p>和之前的相比，这次更新主要集中在以下几点：</p><ul><li>项目改造为多模块项目，更易于管理和维护</li><li>邮件的收发功能引入了消息中间件 RabbitMQ，搭建了独立的邮件服务专门处理邮件发送问题</li><li>POST/PUT 请求参数统一修改为 JSON 格式（旧版里还存在大量的 key/value 形式的参数）</li><li>数据库版本升级到 MySQL8 ，在部分地方处理也不太一样</li><li>Spring Boot 版本升级到 Spring Boot2.1.8（这个没办法，不管我代码写的多快，都赶不上 Spring Boot 版本升级的速度）</li><li>Vue 构建工具升级到 vue-cli4</li><li>项目聊天页面模仿微信聊天来实现</li><li>其他一些由于版本升级带来的代码写法变化</li></ul><p><img src="http://www.javaboy.org/images/other/99-1.png" alt></p><p>上图是新版的在线聊天功能“剧照”。</p><p>更多的变化，小伙伴们可以从 GitHub 上 clone 体验下：</p><ul><li><a href="https://github.com/lenve/vhr" target="_blank" rel="noopener">https://github.com/lenve/vhr</a></li></ul><p>当然，由于时间仓促，还有一些不足的地方，松哥非常欢迎小伙伴们提交 pr 一起来完善这个项目，这个完善，即可以是功能的完善，也可以是现有代码问题的修复，松哥都欢迎，不过大家提交 pr 的时候注意提交规范和代码规范。<strong>后面我会在项目的 README.md 中维护一个项目贡献榜。</strong></p><p>由于多模块、消息中间件等的引入，项目的部署也变得麻烦起来，这个问题，松哥后面也会专门录制一个视频教程跟小伙伴们讲解更新后的项目要如何运行+部署，大家可以留意松哥公众号的消息哦。</p><p>最后再提醒一下各位小伙伴，微人事项目，松哥在每一次提交大版本的时候，都会打一个 tag，在 GitHub 上，每一个 tag 其实就是一个 release，所以大家如果还想看以前早期的代码，只需要点击 GitHub 上的 releases 标签，就可以看到并下载历史版本了：</p><p><img src="http://www.javaboy.org/images/other/99-2.png" alt></p><p>或者也可以直接 clone 本项目，然后通过版本回退，找到之前的代码。要是不懂版本回退，可以看松哥公众号上的 Git 教程（底部菜单里边的 教程合集）。</p><p>好了，感兴趣的小伙伴赶紧体验下，也欢迎大家参与到这个项目中，特别是跟着视频做了一遍的小伙伴，技术点基本上都掌握了，再去完善功能，应该是 so so so easy。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;不知为什么，当我准备写这篇文章的时候，就想起下面这句台词：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.javaboy.org/images/other/99-3.jpg&quot; alt&gt;&lt;br&gt;&lt;img src=&quot;http://www.javaboy.org/images/other/99-4.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;从九月份到现在，三个月忙里偷闲，终于将微人事（&lt;a href=&quot;https://github.com/lenve/vhr&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/lenve/vhr&lt;/a&gt;）重构了一遍。&lt;/p&gt;
    
    </summary>
    
      <category term="vhr" scheme="http://www.javaboy.org/categories/vhr/"/>
    
    
      <category term="vhr" scheme="http://www.javaboy.org/tags/vhr/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot2.2.0 里边的一个小坑，滑倒了不少小伙伴</title>
    <link href="http://www.javaboy.org/2019/1221/springboot2.2-freemarker.html"/>
    <id>http://www.javaboy.org/2019/1221/springboot2.2-freemarker.html</id>
    <published>2019-12-21T01:20:27.000Z</published>
    <updated>2020-01-10T01:44:19.778Z</updated>
    
    <content type="html"><![CDATA[<p>Spring Boot2.2.0 这个版本发布没多久，Spring Boot2.2.1 就出来，看似不太重要的版本，却发生了一个小小变化，导致不少小伙伴掉坑了，我本来也没太在意，但是最近有快十个小伙伴在微信上问这个问题，看来我必须得写篇文章说下了，防止小伙伴们掉坑了。</p><a id="more"></a><p>到底是什么问题呢？其实就是 Freemarker 后缀变化的问题，一开始收到这个问题的时候，我以为就是小伙伴们学习不认真导致的，也没太在意：</p><p><img src="http://www.javaboy.org/images/boot/49-1.png" alt><br><img src="http://www.javaboy.org/images/boot/49-2.png" alt></p><p>结果最近不停有人掉坑，我觉得很有必要给各位小伙伴提个醒。</p><p>很多小伙伴可能很早就接触过 Freemarker，这个模板在 SSM 中也可以使用，只不过需要我们自己的配置东西稍微有点多。但是在之前我们使用 Freemarker 时，这个模板文件的后缀是 ftl，所以我们理所当然的认为这是标准后缀。</p><p>其实不然。</p><p>在 Freemarker 中，还有两个后缀，一个叫做 ftlh，这个用在 HTML 模板中，另一个叫做 ftlx，这个用在 XML 模板中。</p><p>Spring Boot2.2.0 之前，Freemarker 模板默认采用的后缀就是 ftl，我们可以看下 FreeMarkerProperties 类的部分源码（Spring Boot2.2.0 之前的版本）：</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">@ConfigurationProperties</span>(</span><br><span class="line">    prefix = <span class="hljs-string">"spring.freemarker"</span></span><br><span class="line">)</span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FreeMarkerProperties</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AbstractTemplateViewResolverProperties</span> </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String DEFAULT_TEMPLATE_LOADER_PATH = <span class="hljs-string">"classpath:/templates/"</span>;</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String DEFAULT_PREFIX = <span class="hljs-string">""</span>;</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String DEFAULT_SUFFIX = <span class="hljs-string">".ftl"</span>;</span><br><span class="line">    <span class="hljs-keyword">private</span> Map&lt;String, String&gt; settings = <span class="hljs-keyword">new</span> HashMap();</span><br><span class="line">    <span class="hljs-keyword">private</span> String[] templateLoaderPath = <span class="hljs-keyword">new</span> String[]&#123;<span class="hljs-string">"classpath:/templates/"</span>&#125;;</span><br><span class="line">    <span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> preferFileSystemAccess = <span class="hljs-keyword">true</span>;</span><br></pre></td></tr></table></figure><p>可以看到，DEFAULT_SUFFIX 变量中定义的 Freemarker 默认的后缀还是 <code>.ftl</code>。</p><p>从 Spring Boot2.2.0 开始，FreeMarkerProperties 文件内容就发生了变化，最新的 FreeMarkerProperties 文件部分源码如下：</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">@ConfigurationProperties</span>(</span><br><span class="line">    prefix = <span class="hljs-string">"spring.freemarker"</span></span><br><span class="line">)</span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FreeMarkerProperties</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AbstractTemplateViewResolverProperties</span> </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String DEFAULT_TEMPLATE_LOADER_PATH = <span class="hljs-string">"classpath:/templates/"</span>;</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String DEFAULT_PREFIX = <span class="hljs-string">""</span>;</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String DEFAULT_SUFFIX = <span class="hljs-string">".ftlh"</span>;</span><br><span class="line">    <span class="hljs-keyword">private</span> Map&lt;String, String&gt; settings = <span class="hljs-keyword">new</span> HashMap();</span><br><span class="line">    <span class="hljs-keyword">private</span> String[] templateLoaderPath = <span class="hljs-keyword">new</span> String[]&#123;<span class="hljs-string">"classpath:/templates/"</span>&#125;;</span><br><span class="line">    <span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> preferFileSystemAccess = <span class="hljs-keyword">true</span>;</span><br></pre></td></tr></table></figure><p>可以看到，这个时候在 DEFAULT_SUFFIX 变量中定义的默认后缀变成 <code>.ftlh</code> 了。</p><p>就这样一个小小变化，就把很多初次接触 Spring Boot 的小伙伴搞晕啦。</p><p>那么这个问题如何解决呢？当大家发现了原因，应该也就能找到解决办法了，其实很简单，两个思路：</p><ul><li>将 Freemarker 模板的后缀改为 <code>.ftlh</code>，推荐这种方式</li><li>在 application.properties 中修改默认配置</li></ul><p>第一种方案，就是我们在定义 Freemarker 模板的时候，直接将原来的 ftl 改成 ftlh 就可以了，像下面这张图这样：</p><p><img src="http://www.javaboy.org/images/boot/49-3.png" alt></p><p>这样框架就能找到相应的模板文件了。</p><p>第二种方案就是 Freemarker 模板的后缀不变，依然是 <code>ftl</code>，然后我们在 application.properties 中修改默认的后缀配置，如下：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring.freemarker.suffix=.ftl</span><br></pre></td></tr></table></figure><p>这样就是人为强行把 Freemarker 模板的后缀又改回 <code>.ftl</code> 了。</p><p>这两种方案都可以解决这个问题。</p><p><strong>其实这个问题很简单，只要你看了 FreeMarkerProperties 类的源码，这个问题一下就明了了。</strong></p><p>松哥刚开始录 Spring Boot 视频的时候，当时最新版是 2.1.6，后来随着视频录制，Spring Boot 版本一直在变化，视频里一直是跟随最新版录制，不过在讲 Freemarker 这块的时候，还是 2.1.6，所以当时还不存在上面这个问题。虽然问题不存在，但是我在视频中却是带领小伙伴们看了 FreeMarkerProperties 类的源码的，出了问题之后，有小伙伴就机智的去翻这个类的源码，然后自己顺利的把问题解决了。感觉深得松哥真传，吾心甚慰。</p><p><img src="http://www.javaboy.org/images/boot/49-4.png" alt></p><p>好了，一个小小的坑，小伙伴们在这里遇到问题稍稍留意下就可以了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Spring Boot2.2.0 这个版本发布没多久，Spring Boot2.2.1 就出来，看似不太重要的版本，却发生了一个小小变化，导致不少小伙伴掉坑了，我本来也没太在意，但是最近有快十个小伙伴在微信上问这个问题，看来我必须得写篇文章说下了，防止小伙伴们掉坑了。&lt;/p&gt;
    
    </summary>
    
      <category term="Spring Boot" scheme="http://www.javaboy.org/categories/Spring-Boot/"/>
    
    
      <category term="Spring Boot" scheme="http://www.javaboy.org/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>来了，松哥纯手工打造 80 多页的 SpringMVC 教程开放下载了</title>
    <link href="http://www.javaboy.org/2019/1218/springmvc-guide.html"/>
    <id>http://www.javaboy.org/2019/1218/springmvc-guide.html</id>
    <published>2019-12-18T01:24:54.000Z</published>
    <updated>2020-01-10T02:02:15.868Z</updated>
    
    <content type="html"><![CDATA[<p>是的，你没看错，在 Spring 和 Maven 教程刚刚发布不到一周，松哥又给大家带来了新的干货，超 80 页 SpringMVC 教程正式上线了。</p><a id="more"></a><p>这份教程，松哥和大家详细聊了 SpringMVC 一些常见用法，如 JSON 处理、数据校验、文件上传 等等。</p><p>和前面的 Spring 和 Maven 教程一样，这个 SpringMVC 教程松哥也提供了线上版和离线版，线上版地址：</p><ul><li><a href="http://springmvc.javaboy.org" target="_blank" rel="noopener">http://springmvc.javaboy.org</a></li></ul><p><img src="http://www.javaboy.org/images/other/98-1.png" alt></p><p>离线版是一个 pdf 文档，小伙伴们在松哥公众号后台回复 springmvc 可以获取离线版下载地址。</p><p><img src="http://www.javaboy.org/images/other/98-2.png" alt><br><img src="http://www.javaboy.org/images/other/98-3.png" alt><br><img src="http://www.javaboy.org/images/other/98-4.png" alt></p><p><strong>注意</strong></p><blockquote><p>由于这个教程里涉及到的代码 Demo 比较多，我看了一下生成的 pdf，代码的排版不是很好看，换行有一点点乱，不方便阅读，因此建议大家通过在线版学习，也就是松哥上面给出来的那个网站。在线版网速可能有一点点慢，松哥后期也会对这个问题进行处理，请小伙伴们留意星球公告哦。</p></blockquote><p>现在，松哥自己的站点，已经做好的有：</p><ul><li><a href="http://www.javaboy.org">http://www.javaboy.org</a></li><li><a href="http://springboot.javaboy.org" target="_blank" rel="noopener">http://springboot.javaboy.org</a></li><li><a href="http://maven.javaboy.org" target="_blank" rel="noopener">http://maven.javaboy.org</a></li><li><a href="http://spring.javaboy.org" target="_blank" rel="noopener">http://spring.javaboy.org</a></li><li><a href="http://springmvc.javaboy.org" target="_blank" rel="noopener">http://springmvc.javaboy.org</a></li></ul><p>未来还计划出：</p><ul><li><a href="http://mybatis.javaboy.org" target="_blank" rel="noopener">http://mybatis.javaboy.org</a></li><li><a href="http://shiro.javaboy.org" target="_blank" rel="noopener">http://shiro.javaboy.org</a></li><li><a href="http://mongodb.javaboy.org" target="_blank" rel="noopener">http://mongodb.javaboy.org</a></li><li><a href="http://redis.javaboy.org" target="_blank" rel="noopener">http://redis.javaboy.org</a></li><li><a href="http://elasticsearch.javaboy.org" target="_blank" rel="noopener">http://elasticsearch.javaboy.org</a></li><li>…</li></ul><p>小伙伴们敬请期待哦。</p><p>好了，SpringMVC 撸起来吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;是的，你没看错，在 Spring 和 Maven 教程刚刚发布不到一周，松哥又给大家带来了新的干货，超 80 页 SpringMVC 教程正式上线了。&lt;/p&gt;
    
    </summary>
    
      <category term="SpringMVC" scheme="http://www.javaboy.org/categories/SpringMVC/"/>
    
    
      <category term="SpringMVC" scheme="http://www.javaboy.org/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>聊一聊 Spring Security 密码加密方案</title>
    <link href="http://www.javaboy.org/2019/1217/springsecurity-passwordencoder.html"/>
    <id>http://www.javaboy.org/2019/1217/springsecurity-passwordencoder.html</id>
    <published>2019-12-17T01:20:43.000Z</published>
    <updated>2020-01-10T01:45:43.096Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么要加密"><a href="#为什么要加密" class="headerlink" title="为什么要加密"></a>为什么要加密</h2><p>2011 年 12 月 21 日，有人在网络上公开了一个包含 600 万个 CSDN 用户资料的数据库，数据全部为明文储存，包含用户名、密码以及注册邮箱。事件发生后 CSDN 在微博、官方网站等渠道发出了声明，解释说此数据库系 2009 年备份所用，因不明原因泄露，已经向警方报案，后又在官网发出了公开道歉信。在接下来的十多天里，金山、网易、京东、当当、新浪等多家公司被卷入到这次事件中。整个事件中最触目惊心的莫过于 CSDN 把用户密码明文存储，由于很多用户是多个网站共用一个密码，因此一个网站密码泄露就会造成很大的安全隐患。由于有了这么多前车之鉴，我们现在做系统时，密码都要加密处理。</p><a id="more"></a><p>这次泄密，也留下了一些有趣的事情，特别是对于广大程序员设置密码这一项。人们从 CSDN 泄密的文件中，发现了一些好玩的密码，例如如下这些：</p><ul><li><code>ppnn13%dkstFeb.1st</code> 这段密码的中文解析是：娉娉袅袅十三余，豆蔻梢头二月初。</li><li><code>csbt34.ydhl12s</code> 这段密码的中文解析是：池上碧苔三四点，叶底黄鹂一两声</li><li>…</li></ul><p>等等不一而足，你会发现很多程序员的人文素养还是非常高的，让人啧啧称奇。</p><h2 id="加密方案"><a href="#加密方案" class="headerlink" title="加密方案"></a>加密方案</h2><p>密码加密我们一般会用到散列函数，又称散列算法、哈希函数，这是一种从任何数据中创建数字“指纹”的方法。散列函数把消息或数据压缩成摘要，使得数据量变小，将数据的格式固定下来，然后将数据打乱混合，重新创建一个散列值。散列值通常用一个短的随机字母和数字组成的字符串来代表。好的散列函数在输入域中很少出现散列冲突。在散列表和数据处理中，不抑制冲突来区别数据，会使得数据库记录更难找到。我们常用的散列函数有 MD5 消息摘要算法、安全散列算法（Secure Hash Algorithm）。</p><p>但是仅仅使用散列函数还不够，为了增加密码的安全性，一般在密码加密过程中还需要加盐，所谓的盐可以是一个随机数也可以是用户名，加盐之后，即使密码明文相同的用户生成的密码密文也不相同，这可以极大的提高密码的安全性。但是传统的加盐方式需要在数据库中有专门的字段来记录盐值，这个字段可能是用户名字段（因为用户名唯一），也可能是一个专门记录盐值的字段，这样的配置比较繁琐。 </p><p>Spring Security 提供了多种密码加密方案，官方推荐使用 BCryptPasswordEncoder，BCryptPasswordEncoder 使用 BCrypt 强哈希函数，开发者在使用时可以选择提供 strength 和 SecureRandom 实例。strength 越大，密钥的迭代次数越多，密钥迭代次数为 2^strength。strength 取值在 4~31 之间，默认为 10。</p><p>不同于 Shiro 中需要自己处理密码加盐，在 Spring Security 中，BCryptPasswordEncoder 就自带了盐，处理起来非常方便。</p><h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p>在 Spring Boot 中配置密码加密非常容易，只需要修改上文配置的 PasswordEncoder 这个 Bean 的实现即可，如下：</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">@Bean</span></span><br><span class="line"><span class="hljs-function">PasswordEncoder <span class="hljs-title">passwordEncoder</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> BCryptPasswordEncoder(<span class="hljs-number">10</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建 BCryptPasswordEncoder 时传入的参数 10 就是 strength，即密钥的迭代次数（也可以不配置，默认为 10）。同时，配置的内存用户的密码也不再是 123了，如下：</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">auth.inMemoryAuthentication()</span><br><span class="line">.withUser(<span class="hljs-string">"admin"</span>)</span><br><span class="line">.password(<span class="hljs-string">"$2a$10$RMuFXGQ5AtH4wOvkUqyvuecpqUSeoxZYqilXzbz50dceRsga.WYiq"</span>)</span><br><span class="line">.roles(<span class="hljs-string">"ADMIN"</span>, <span class="hljs-string">"USER"</span>)</span><br><span class="line">.and()</span><br><span class="line">.withUser(<span class="hljs-string">"sang"</span>)</span><br><span class="line">.password(<span class="hljs-string">"$2a$10$eUHbAOMq4bpxTvOVz33LIehLe3fu6NwqC9tdOcxJXEhyZ4simqXTC"</span>)</span><br><span class="line">.roles(<span class="hljs-string">"USER"</span>);</span><br></pre></td></tr></table></figure><p>这里的密码就是使用 BCryptPasswordEncoder 加密后的密码，虽然 admin 和 sang 加密后的密码不一样，但是明文都是 123。配置完成后，使用 admin/123 或者 sang/123 就可以实现登录。</p><p>本案例使用了配置在内存中的用户，一般情况下，用户信息是存储在数据库中的，因此需要在用户注册时对密码进行加密处理，如下：</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">@Service</span></span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RegService</span> </span>&#123;</span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">reg</span><span class="hljs-params">(String username, String password)</span> </span>&#123;</span><br><span class="line">        BCryptPasswordEncoder encoder = <span class="hljs-keyword">new</span> BCryptPasswordEncoder(<span class="hljs-number">10</span>);</span><br><span class="line">        String encodePasswod = encoder.encode(password);</span><br><span class="line">        <span class="hljs-keyword">return</span> saveToDb(username, encodePasswod);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用户将密码从前端传来之后，通过调用 BCryptPasswordEncoder 实例中的 encode 方法对密码进行加密处理，加密完成后将密文存入数据库。</p><p>本文节选自松哥年初出版的《Spring Boot + Vue 全栈开发实战》第十章。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;为什么要加密&quot;&gt;&lt;a href=&quot;#为什么要加密&quot; class=&quot;headerlink&quot; title=&quot;为什么要加密&quot;&gt;&lt;/a&gt;为什么要加密&lt;/h2&gt;&lt;p&gt;2011 年 12 月 21 日，有人在网络上公开了一个包含 600 万个 CSDN 用户资料的数据库，数据全部为明文储存，包含用户名、密码以及注册邮箱。事件发生后 CSDN 在微博、官方网站等渠道发出了声明，解释说此数据库系 2009 年备份所用，因不明原因泄露，已经向警方报案，后又在官网发出了公开道歉信。在接下来的十多天里，金山、网易、京东、当当、新浪等多家公司被卷入到这次事件中。整个事件中最触目惊心的莫过于 CSDN 把用户密码明文存储，由于很多用户是多个网站共用一个密码，因此一个网站密码泄露就会造成很大的安全隐患。由于有了这么多前车之鉴，我们现在做系统时，密码都要加密处理。&lt;/p&gt;
    
    </summary>
    
      <category term="Spring Boot" scheme="http://www.javaboy.org/categories/Spring-Boot/"/>
    
    
      <category term="Spring Boot" scheme="http://www.javaboy.org/tags/Spring-Boot/"/>
    
      <category term="Spring Security" scheme="http://www.javaboy.org/tags/Spring-Security/"/>
    
  </entry>
  
  <entry>
    <title>来了，松哥纯手工打造的超 50 页 Spring 教程开放下载了</title>
    <link href="http://www.javaboy.org/2019/1209/spring-guide.html"/>
    <id>http://www.javaboy.org/2019/1209/spring-guide.html</id>
    <published>2019-12-09T01:24:36.000Z</published>
    <updated>2020-01-10T02:00:46.991Z</updated>
    
    <content type="html"><![CDATA[<p>是的，你没看错，在 Maven 教程刚刚发布不到一周，松哥又给大家带来了新的干货，超 50 页 Spring 入门教程正式上线了。</p><a id="more"></a><p>这是一个入门级的 Spring 教程，松哥主要从以下四个方面简单介绍了 Spring，方便刚入行的小伙伴快速上手这个 JavaEE 基础框架：</p><ul><li>Ioc</li><li>Aop</li><li>JdbcTemplate</li><li>事务</li></ul><p>老实说，入门够用了，但还不是很深入，松哥未来还会继续完善这个教程，也请大家留意松哥网站的更新。</p><p>和 Maven 一样，这个教程也提供了线上版和离线版，线上版地址：</p><ul><li><a href="http://spring.javaboy.org" target="_blank" rel="noopener">http://spring.javaboy.org</a></li></ul><p><img src="http://www.javaboy.org/images/other/96-1.png" alt></p><p>离线版是一个 pdf 文档，小伙伴们在松哥公众号后台回复 spring 可以获取离线版下载地址。</p><p><img src="http://www.javaboy.org/images/other/96-2.png" alt></p><p><strong>注意</strong></p><blockquote><p>由于这个教程里涉及到的代码 Demo 比较多，我看了一下生成的 pdf，代码的排版不是很好看，换行有一点点乱，不方便阅读，因此建议大家通过在线版学习，也就是松哥上面给出来的那个网站。</p></blockquote><p>现在，松哥自己的站点，已经做好的有：</p><ul><li><a href="http://www.javaboy.org">http://www.javaboy.org</a></li><li><a href="http://springboot.javaboy.org" target="_blank" rel="noopener">http://springboot.javaboy.org</a></li><li><a href="http://maven.javaboy.org" target="_blank" rel="noopener">http://maven.javaboy.org</a></li><li><a href="http://spring.javaboy.org" target="_blank" rel="noopener">http://spring.javaboy.org</a></li></ul><p>未来还计划出：</p><ul><li><a href="http://springmvc.javaboy.org" target="_blank" rel="noopener">http://springmvc.javaboy.org</a></li><li><a href="http://mybatis.javaboy.org" target="_blank" rel="noopener">http://mybatis.javaboy.org</a></li><li><a href="http://springcloud.javaboy.org" target="_blank" rel="noopener">http://springcloud.javaboy.org</a></li><li><a href="http://mongodb.javaboy.org" target="_blank" rel="noopener">http://mongodb.javaboy.org</a></li><li><a href="http://redis.javaboy.org" target="_blank" rel="noopener">http://redis.javaboy.org</a></li><li><a href="http://elasticsearch.javaboy.org" target="_blank" rel="noopener">http://elasticsearch.javaboy.org</a></li><li>…</li></ul><p>小伙伴们敬请期待哦。</p><p>好了，Spring 撸起来吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;是的，你没看错，在 Maven 教程刚刚发布不到一周，松哥又给大家带来了新的干货，超 50 页 Spring 入门教程正式上线了。&lt;/p&gt;
    
    </summary>
    
      <category term="Spring" scheme="http://www.javaboy.org/categories/Spring/"/>
    
    
      <category term="Spring" scheme="http://www.javaboy.org/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Maven 入门，Maven + IDEA 创建多模块项目，松哥手敲了 30 多页教程给大家送来了</title>
    <link href="http://www.javaboy.org/2019/1204/maven-guide.html"/>
    <id>http://www.javaboy.org/2019/1204/maven-guide.html</id>
    <published>2019-12-04T01:23:54.000Z</published>
    <updated>2020-01-10T01:57:51.681Z</updated>
    
    <content type="html"><![CDATA[<p>是的，你没看错，松哥又来给大家送干货了，这次是松哥纯手工打造的 30+ 页 Maven 入门教程，适合刚入门的小伙伴。</p><a id="more"></a><p>最近发现有不少关注松哥的小伙伴刚入行不久，对于 Spring Boot 和 微服务这些还不能上手，因此我最近打算写一点基础教程，像 Maven、Spring、SpringMVC、MyBatis 等，挨个发估计工作了好几年的小伙伴可能就看厌倦了，所以这些我都尽量写完后，做成一整套的系列发出来。</p><p>这次的 Maven 教程目录如下图：</p><p><img src="http://www.javaboy.org/images/other/93-1.png" alt><br><img src="http://www.javaboy.org/images/other/93-2.png" alt></p><p><strong>敲的匆忙，因此这个文档特别适合刚入行的小伙伴哦</strong>，已经懂得 Maven 用法的小伙伴可以忽略本文。</p><p>这个教程中，除了 Maven 一些基本概念之外，松哥主要和大家说了下在 IDEA 中如何创建 Maven 多模块项目，以及 IDEA 中 web 项目的创建与发布，另外 Maven 私服这块也做了简单介绍。</p><p>这个教程有一个在线版和离线版，在线版地址：</p><ul><li><a href="http://maven.javaboy.org" target="_blank" rel="noopener">http://maven.javaboy.org</a></li></ul><p>离线版是一个 pdf 文档，小伙伴们在公众号后台回复 maven，可以获取离线版 pdf 下载地址。</p><p>现在，松哥自己的站点，已经做好的有：</p><ul><li><a href="http://www.javaboy.org">http://www.javaboy.org</a></li><li><a href="http://springboot.javaboy.org" target="_blank" rel="noopener">http://springboot.javaboy.org</a></li><li><a href="http://maven.javaboy.org" target="_blank" rel="noopener">http://maven.javaboy.org</a></li></ul><p>未来还计划出：</p><ul><li><a href="http://spring.javaboy.org" target="_blank" rel="noopener">http://spring.javaboy.org</a></li><li><a href="http://springmvc.javaboy.org" target="_blank" rel="noopener">http://springmvc.javaboy.org</a></li><li><a href="http://mybatis.javaboy.org" target="_blank" rel="noopener">http://mybatis.javaboy.org</a></li><li><a href="http://mongodb.javaboy.org" target="_blank" rel="noopener">http://mongodb.javaboy.org</a></li><li>…</li></ul><p>小伙伴们敬请期待哦。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;是的，你没看错，松哥又来给大家送干货了，这次是松哥纯手工打造的 30+ 页 Maven 入门教程，适合刚入门的小伙伴。&lt;/p&gt;
    
    </summary>
    
      <category term="Maven" scheme="http://www.javaboy.org/categories/Maven/"/>
    
    
      <category term="Maven" scheme="http://www.javaboy.org/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>搬砖不易，和大家聊聊松哥经历过的两次裁员</title>
    <link href="http://www.javaboy.org/2019/1203/coding-life.html"/>
    <id>http://www.javaboy.org/2019/1203/coding-life.html</id>
    <published>2019-12-03T01:23:37.000Z</published>
    <updated>2020-01-10T01:56:36.487Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://www.javaboy.org/images/other/91-1.png" alt></p><blockquote><p>长太息以掩涕兮，哀民生之多艰</p></blockquote><p>前两天网易暴力裁员的事情闹得沸沸扬扬，事情闹大之后，也总算有一个还过得去的结局。</p><a id="more"></a><p>其实裁员这事，在互联网行业我感觉就像家常便饭一样，没吃过猪肉，也见过猪跑呀。只是像网易这样的大厂，把裁员这事搞得这么恶心，这就少见了。</p><p>松哥从 2015 年毕业到现在，经历过两波裁员，第一波没有波及到我，第二波因为分公司倒闭，我也无法幸免（参见：<a href="https://mp.weixin.qq.com/s/qGFo2MKkD0AObBJDPR8veQ" target="_blank" rel="noopener">公司倒闭 1 年了，而我当年的项目上了 GitHub 热榜</a>）。不过，松哥经历的两波裁员，没有像网易这么恶心，当时的赔偿都是按照劳动合同法来的，你也不用争取，不用废话，法律规定的都不会少，法律之外的，甚至还有一些人道主义补偿。我当时还在感慨一线城市公司制度的健全。今天来和小伙伴们聊聊这些。</p><h2 id="第一次"><a href="#第一次" class="headerlink" title="第一次"></a>第一次</h2><p>松哥经历的第一次裁员发生在 2016 年，当时我还是一名 Android 工程师，五月份的时候，我回了一次老家，回来后去上班，发现有 1 个同事不见了，一打听，才知道被裁掉了，当时我还以为这是一个常规操作，因为那个同事之前违反公司规定，利用在公司的职务之便在外面赚了一些钱，被公司发现并通报了，我以为是因为这原因裁掉的，当时还没意识到一场产品线撤换的暴风雨就要来了。</p><p>到了六月份，我被公司连着从广州派到广西和深圳出差，每次出差回到公司，都有几个 iOS 工程师被裁了，当时就有点人心惶惶了。松哥当时才刚毕业没多久，头回遇到这种事，而且发生在 iOS 工程师身上，据说我们 Android 也快了，我当时上班都没有心情搬砖了，出差在外，一直打听广州的最新情况和北京总部的动向。</p><p>七月份的时候，我被派去成都出差，等我从成都回来的时候，发现 iOS 只剩他们部门老大了，他们部门老大的工位跟我是挨着的，他当时准备走大前端方向，因为我看到他有的时候在学习前端的东西，我心里还想着他可能平安着陆了，公司不裁他，允许他内部转岗。</p><p>不过好景不长，没过多久，有一天下午，他被领导叫去谈话了，谈了很久，回来后就开始收拾工位上的东西，他收拾的很慢，从抽屉里把东西一个个拿出来整理，我还瞟到了一个上年年会时北京总部给他发的一个优秀员工奖章，不过曾经的荣誉这时都没啥用，公司要调整产品线，员工只能让路。</p><p>我坐在他旁边挺纠结的，不知道要不要去安慰他一下，或者随便说两句话活跃一下沉闷的气氛，第一次遇到这种事情，没有经验，也不知道该怎么做，就这样一直纠结到他收拾好东西，下班走人。</p><p>iOS 裁完之后，据说年底干掉 Android，当时 7 月底，虽然工作没丢，可以继续上班，但是各种绩效已经开始缩水了。</p><p>那段时间，我每天回到家里不是研究技术，而是研究劳动合同法，大学时候选修过劳动合同法，不过经常翘课，没怎么学。等到了那一年年底，感觉技术没啥长进，法律知识倒是涨了不少。</p><p>而且我刚好是在那年年底买的房，来年就要开始还房贷了，失业对我来说太可怕了，加上我对 Android 也有一点厌倦了，于是开始准备重新拾起 JavaEE 的东西，这就是另外一个故事了。（参见：<a href="https://mp.weixin.qq.com/s/wwZDx4sRbXjVJPqccRcJvg" target="_blank" rel="noopener">前后端分离，我怎么就选择了 Spring Boot + Vue 技术栈？</a>）</p><p>这就是我经历的第一波裁员，不过公司也算厚道，该给的赔偿一分都没少，分公司的领导甚至给有的员工联系了下家，加班的天数和年假都折算成工资发了。所以在后来公司业绩回暖的时候，有不少曾经的同事又回来了。</p><p>相比网易的暴力裁员，松哥经历的第一次裁员操作算得上是业界良心了。</p><h2 id="第二次"><a href="#第二次" class="headerlink" title="第二次"></a>第二次</h2><p>第二次的时候，松哥人已经从广州来到深圳了，这次就算不上是裁员了，是分公司倒闭。松哥也无法幸免。</p><p>倒闭这事，不是突然就倒闭了，有一个过程。</p><p>一个重要现象就是工资无法按时发放。</p><p>当年大概从 7 月份开始，每个月的工资就无法按时发放了，每次都会延迟 10 天左右。说是因为深圳这边经营亏损，要北京总部调配资金（领导当时这么解释的），所以总是延迟 10 天左右。</p><p>等到 10 月份的时候，工资在推迟 10 天之后还没发，于是大家都惶恐不安，私下组建了各种各样的微信群，天天在讨论怎么办，那个时候深圳公司的业务基本上也都停了。</p><p>不过老实说，我自己那会倒不怎么担心，不担心有两个原因，一个是公司是香港上市公司，这次关门的是深圳分公司，我觉得跑得了和尚跑不了庙；另一个不担心的原因是，由于种种原因，我对当时我的直属领导非常信任，我知道他会考虑到下属的利益，不是那种一味迎合上司不过下面人死活的人，他让我放心，所以我就安下心来，该干嘛干嘛。</p><p>这也是我为什么后来愿意留下来善后并且趁机做了 V 部落和微人事两个开源项目。</p><p>大概在 11 月份的时候，北京总部派人来深圳，和员工一个一个谈，说是谈，其实也没啥好谈的，开发部门员工的赔偿都是按照劳动合同法走的。谈完之后，包括松哥在内的几个同事留下来善后，其他的同事在 11 月就走人了。</p><p>也正是因为留下来善后，我才有空做了 V 部落和微人事。</p><p>一直干到 2018 年 1 月 31 号，公司正式关门，我也回家过年了，除夕的前一天，工资连同赔偿金全部都发下来了。</p><p>我一直觉得自己还是比较幸运，没遇到过不良公司。</p><h2 id="再说两句其他的"><a href="#再说两句其他的" class="headerlink" title="再说两句其他的"></a>再说两句其他的</h2><p>我自己虽然没遇到不良公司，身边朋友倒是有遇到过。</p><p>一个在北京的朋友，公司快要倒闭了，发不出薪水，老板说把薪水给他折算成公司股份（小伙伴们要是遇到老板突然要给你分股份，可要小心了哈哈）。</p><p>另一个深圳的朋友，今年 3 月份公司倒闭，他和同事去集体仲裁，走流程，现在流程还没走完，钱也没拿到手。</p><p>松哥在经历过两次裁员之后，在这个行业我是彻底失去了安全感，无论是写博客，写公众号，写书，做开源项目，都是为了能给自己多留一条后路，也很幸运，这几件事情目前做的都还过得去。</p><p><strong>平时多学习学习，没事写写博客，记录下技术心得，增加自己的软实力，相信松哥，没错。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://www.javaboy.org/images/other/91-1.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;长太息以掩涕兮，哀民生之多艰&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;前两天网易暴力裁员的事情闹得沸沸扬扬，事情闹大之后，也总算有一个还过得去的结局。&lt;/p&gt;
    
    </summary>
    
      <category term="life" scheme="http://www.javaboy.org/categories/life/"/>
    
    
      <category term="life" scheme="http://www.javaboy.org/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>说起 Spring Boot + Vue，我觉得这是全网最干的干货</title>
    <link href="http://www.javaboy.org/2019/1128/springboot-video.html"/>
    <id>http://www.javaboy.org/2019/1128/springboot-video.html</id>
    <published>2019-11-28T01:22:24.000Z</published>
    <updated>2020-01-10T03:21:02.755Z</updated>
    
    <content type="html"><![CDATA[<p>松哥自制的 Spring Boot + Vue 视频教程已经录制了 241 集共约 50 个小时，即将杀青，因此 199 这个优惠价格只剩这个月最后三天了（11.28-11.30）。需要的小伙伴赶紧扫码加松哥微信，发红包 199 领取视频：</p><a id="more"></a><p><img src="http://www.javaboy.org/images/other/74-10.jpeg" alt></p><p>为了录制这套视频松哥起早贪黑披星戴月，既看到了晚上 12 点的深圳也看到了早晨 6 点的深圳，小伙伴们可能也能看到，视频中代码注释生成的时间都是在早上 8 点之前或者晚上 10 点之后。</p><p>从 7 月份到现在，几乎没有没有周末，完成了下面这套视频教程（这是已经更新的 Spring Boot 和微人事项目实战视频目录）：</p><p><img src="http://www.javaboy.org/images/other/83-1.png" alt><br><img src="http://www.javaboy.org/images/other/90-2.png" alt></p><p>Spring Boot 就不用多说了，基本上是按照松哥的《Spring Boot + Vue 全栈开发实战》一书来录制的，项目实战就是讲松哥在 GitHub 上 star 数超 11k 的 Spring Boot + Vue 前后端分离项目微人事(<a href="https://github.com/lenve/vhr)，我会手把手带着大家做一个和我在" target="_blank" rel="noopener">https://github.com/lenve/vhr)，我会手把手带着大家做一个和我在</a> GitHub 上这个微人事一模一样的项目出来。</p><p>大家看上面的视频目录，<strong>这个项目已经快要录完了</strong>。而随着视频录制接近尾声，169 这个白菜价也要退出历史舞台了。</p><p>视频教程和我的写博客的风格基本上一致，通俗易懂一直是我写教程的核心思想（一个简单的东西故意写的晦涩难懂以凸显自己的高深，这种教程实在让人厌恶），而松哥这套视频自录制以来，受到了小伙伴们的广泛好评：</p><p><img src="http://www.javaboy.org/images/other/90-1.jpg" alt><br><img src="http://www.javaboy.org/images/other/83-7.jpg" alt><br><img src="http://www.javaboy.org/images/other/83-8.jpg" alt><br><img src="http://www.javaboy.org/images/other/83-9.jpg" alt></p><p>被这么多小伙伴们信任，松哥诚惶诚恐，只能更加尽力做出更加通俗易懂的教程，来回馈大家。</p><p><strong>这套视频教程我保存在百度网盘上，下载之后使用专用的播放器一机一码授权播放，因此小伙伴们可以放心，你不会在其他地方看到一模一样免费的视频，因为全部都是我加密之后发布的。</strong></p><p>同时考虑到大家在学习视频教程时，可能会遇到问题，因此我还申请了一个知识星球，购买了视频的小伙伴可以免费加入我的知识星球，大家在学习视频教程时遇到问题，可以在星球上提问，我都会帮大家解答，确保你能学会。</p><p>之前双十一有小伙伴问松哥为什么不搞活动？如果你看到连续几个月凌晨 1 点我还在剪辑视频，早上六点就在录视频，你就明白为什么双十一不搞活动不降价了，199 这个价格，真的没有下降空间啦。小伙伴们看到的 50 个小时的视频教程，这是剪辑之后的结果，其实录制时间远远超过 50 个小时，而视频的剪辑、去噪本身又花费了很多时间与精力。</p><p>松哥是一个地地道道的程序员，不懂专业销售的话术与技巧，如果上面的介绍让你心动了，那么扫码加松哥微信，发红包 199，这些视频教程就是你的啦！</p><p><img src="http://www.javaboy.org/images/other/74-10.jpeg" alt></p><p><strong>过了 11 月 30 号，价格是这样：</strong></p><ul><li>单个小伙伴购买的话是 199</li><li>如果是团购(三个人以上)，价格是 199</li></ul><p><strong>松哥脸皮薄，过了 11 月 30 号，小伙伴们来找我，千万别和我砍价，成年人的世界，沉默就是拒绝。</strong></p><p>好了，心动不如行动~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;松哥自制的 Spring Boot + Vue 视频教程已经录制了 241 集共约 50 个小时，即将杀青，因此 199 这个优惠价格只剩这个月最后三天了（11.28-11.30）。需要的小伙伴赶紧扫码加松哥微信，发红包 199 领取视频：&lt;/p&gt;
    
    </summary>
    
      <category term="Spring Boot" scheme="http://www.javaboy.org/categories/Spring-Boot/"/>
    
    
      <category term="Spring Boot" scheme="http://www.javaboy.org/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>给大家整理了几个开源免费的 Spring Boot + Vue 学习资料</title>
    <link href="http://www.javaboy.org/2019/1120/sprinkgboot-vue.html"/>
    <id>http://www.javaboy.org/2019/1120/sprinkgboot-vue.html</id>
    <published>2019-11-20T01:52:13.000Z</published>
    <updated>2019-11-20T02:12:39.203Z</updated>
    
    <content type="html"><![CDATA[<p>最近抽空在整理前面的文章案例啥的，顺便把手上的几个 Spring Boot + Vue 的学习资料推荐给各位小伙伴。这些案例有知识点的讲解，也有项目实战，正在做这一块的小伙伴们可以收藏下。</p><a id="more"></a><h2 id="案例学习"><a href="#案例学习" class="headerlink" title="案例学习"></a>案例学习</h2><h3 id="javaboy-video-samples"><a href="#javaboy-video-samples" class="headerlink" title="javaboy-video-samples"></a>javaboy-video-samples</h3><ul><li>项目地址：<a href="https://github.com/lenve/javaboy-video-samples" target="_blank" rel="noopener">https://github.com/lenve/javaboy-video-samples</a></li></ul><p>这个是松哥录制的 Spring Boot2 系列视频教程的案例，视频是加密的，但是案例从一开始就是开源的，这个可以毫无保留的共享给大家，案例可以说是非常全面，这个仓库会随着视频的录制而继续完善。</p><p><img src="http://www.javaboy.org/images/other/88-1.png" alt></p><h3 id="javaboy-code-samples"><a href="#javaboy-code-samples" class="headerlink" title="javaboy-code-samples"></a>javaboy-code-samples</h3><ul><li>项目地址：<a href="https://github.com/lenve/javaboy-code-samples" target="_blank" rel="noopener">https://github.com/lenve/javaboy-code-samples</a></li></ul><p>这个是我平时公众号上文章的案例，因为公众号的文章大部分都是以 Spring Boot + Vue 前后端分离开发为主，所以这些文章也是这一方面的，不同于上面的那个仓库，这里的每个案例都有对应的文章进行讲解，这个仓库中的内容会随着公众号文章的增加而继续增加：</p><p><img src="http://www.javaboy.org/images/other/88-2.png" alt></p><h3 id="spring-boot-vue-samples"><a href="#spring-boot-vue-samples" class="headerlink" title="spring-boot-vue-samples"></a>spring-boot-vue-samples</h3><ul><li>项目地址：<a href="https://github.com/lenve/spring-boot-vue-samples" target="_blank" rel="noopener">https://github.com/lenve/spring-boot-vue-samples</a></li></ul><p>这个是松哥《Spring Boot + Vue 全栈开发实战》一书的官方案例，但是因为书里给出来的地址是一个百度云盘的地址，所以这个仓库很少受到小伙伴们的关注。不过这套案例的整理的不是很满意，另外这套案例也比较旧了，是去年的，所以建议小伙伴们关注第一个，里边的案例比较新，也比较整齐。</p><p><img src="http://www.javaboy.org/images/other/88-3.png" alt></p><h3 id="Spring-Boot2"><a href="#Spring-Boot2" class="headerlink" title="Spring Boot2"></a>Spring Boot2</h3><ul><li>项目地址：<a href="http://springboot.javaboy.org" target="_blank" rel="noopener">http://springboot.javaboy.org</a></li></ul><p>这个不是 GitHub 上的仓库，是松哥一系列 Spring Boot 相关文章的集合，我把它做成了电子书的形式，但是有两个不太满意的地方：一个是文章排版不太满意，另一个则是网站托管在国外服务器上，访问速度较慢，因此这个在线的电子书我最近也在整理，整理完成后，我会分享出来给大家免费下载，小伙伴们多多关注公众号上的消息哦。</p><p><img src="http://www.javaboy.org/images/other/88-4.png" alt></p><h3 id="awesome-github-vue"><a href="#awesome-github-vue" class="headerlink" title="awesome-github-vue"></a>awesome-github-vue</h3><ul><li>项目地址：<a href="https://github.com/opendigg/awesome-github-vue" target="_blank" rel="noopener">https://github.com/opendigg/awesome-github-vue</a></li></ul><p>这个不是松哥的仓库，这是我刚开始学习 Vue 的时候收藏的一个仓库，感觉非常棒，很多常用的 Vue 插件这里都有，不过稍微遗憾的是，这个仓库有两年没有更新了，不过对于刚刚开始接触 Vue 的小伙伴而言，这个仓库够用了。</p><p><img src="http://www.javaboy.org/images/other/88-5.png" alt><br><img src="http://www.javaboy.org/images/other/88-6.png" alt><br><img src="http://www.javaboy.org/images/other/88-7.png" alt></p><h2 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h2><p>项目就不用多说了，V 部落和微人事。</p><h3 id="微人事"><a href="#微人事" class="headerlink" title="微人事"></a>微人事</h3><ul><li>项目地址：<a href="https://github.com/lenve/vhr" target="_blank" rel="noopener">https://github.com/lenve/vhr</a></li></ul><p>关于微人事我已经写过好多文章了，这里就不再赘述了，要告诉大家的一个好消息是，大概在 12 月，微人事会进行一次全面的版本升级，Spring Boot 切换到当前最新版，Vue 构建工具切换到 vue-cli3，而且还会引入消息中间件 RabbitMQ 等一些外部工具，进一步扩展微人事所涉及到的知识点。微人事项目最新体验地址：</p><ul><li><a href="http://vhr.itboyhub.com" target="_blank" rel="noopener">http://vhr.itboyhub.com</a></li></ul><p>当然，松哥之前也录过一个微人事部署视频，大家可以参考：</p><h3 id="V-部落"><a href="#V-部落" class="headerlink" title="V 部落"></a>V 部落</h3><ul><li>项目地址：<a href="https://github.com/lenve/VBlog" target="_blank" rel="noopener">https://github.com/lenve/VBlog</a></li></ul><p>V 部落没有微人事那么丰富的文档，但是比较简单，业务简单，用到的技术点也简单，不过好多小伙伴竟然反映部署不起来，以后我看时间抽空也可以录一个部署教程吧，V 部落目前最新的体验地址是：</p><ul><li><a href="http://vblog.itboyhub.com" target="_blank" rel="noopener">http://vblog.itboyhub.com</a></li></ul><p>最后再悄悄告诉大家，公众号后台回复 <code>2TB</code> 可以获取 2TB Java 学习资源下载地址哦。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近抽空在整理前面的文章案例啥的，顺便把手上的几个 Spring Boot + Vue 的学习资料推荐给各位小伙伴。这些案例有知识点的讲解，也有项目实战，正在做这一块的小伙伴们可以收藏下。&lt;/p&gt;
    
    </summary>
    
      <category term="学习资源" scheme="http://www.javaboy.org/categories/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/"/>
    
    
      <category term="学习资源" scheme="http://www.javaboy.org/tags/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>前后端分离，我怎么就选择了 Spring Boot + Vue 技术栈？</title>
    <link href="http://www.javaboy.org/2019/1119/springboot-vue-stack.html"/>
    <id>http://www.javaboy.org/2019/1119/springboot-vue-stack.html</id>
    <published>2019-11-19T01:51:53.000Z</published>
    <updated>2019-11-20T02:07:33.232Z</updated>
    
    <content type="html"><![CDATA[<p>前两天又有小伙伴私信松哥，问题还是职业规划，Java 技术栈路线这种，实际上对于这一类问题我经常不太敢回答，每个人的情况都不太一样，而小伙伴也很少详细介绍自己的情况，大都是一两句话就把问题抛出来了，啥情况都不了解，就要指出一个方向，这实在是太难了。</p><a id="more"></a><p>因此今天我想从我学习 Spring Boot + Vue 这套技术栈的角度，来和大家聊一聊没有人指导，我是如何一步一步建立起自己的技术体系的。</p><p>线上大家看我经常写文章，线下我其实比较宅，跟人交流比较少，我也很少问别人职业规划或者技术规划这些问题，因为这种学什么的问题，我喜欢自己把握，我不太喜欢被别人牵着走。</p><p><code>Rome was not built in a day</code>，刚开始接触 Spring Boot + Vue 时，我甚至都没有一个明确的想法，只是觉得该学点什么，不能让时间浪费，没有告诉我 Spring Boot 要火了，也没有人告诉我 Vue 要超过 React 了，都是我自己一直在摸索摸索，一步一步，直到构建起这套技术大厦。</p><h2 id="Spring-Boot"><a href="#Spring-Boot" class="headerlink" title="Spring Boot"></a>Spring Boot</h2><p>先说说 Spring Boot 吧，三年前差不多也是这个时候，是我第一次接触 Spring Boot ，那个时候我的正式身份还是一名 Android 工程师，那段时间在研究 Android7 的源码，还写了一些博客：</p><p><img src="http://www.javaboy.org/images/other/87-1.png" alt></p><p>但是那个时候 Android 的行情在慢慢下滑，而我刚毕业 1 年多，未来还有更加丰富的技术人生，我不愿意这么早就把技术栈定死，而且还定在一个行情日渐下滑的技术栈上。所以我打算学一点新的东西。</p><p>Python、Go、前端 和 Java 都是备选的方向，但是最终还是选择继续做 Java，有三个原因：</p><ul><li>做 Java 当时可以在公司内部转岗，做 Python 或者 Go 的话，可能就得换工作了，技术栈切换，一切从头开始，当时心里还是没底，于是就选择继续做 Java</li><li>刚好大学的时候也有 JavaEE 的底子，重新捡起来 JavaEE 相关的技术点倒也不是啥难事</li><li>第三点也是最重要的一点，我一直希望能够独立接点私活，这样有一天赚钱能够不受工作地点的限制，基于这样的初衷，我一直希望走全栈的路线，用 Python 和 Go 虽然也可以做企业级应用，但是在目前的技术环境下，这并不算是主流方案，主流方案依然是 Java ，虽然它被被多人吐槽</li></ul><p>基于以上三点，我决定还是走 Java 的方向吧。</p><p>2016 年那会，CSDN 几乎每个月送我一本技术图书，10 月份的图书我就和梦鸽美女要了一本 Spring Boot 相关的书，书到了之后，一直在忙各种事情没时间看，到了当年 12 月份的时候，公司安排我去深圳出差，出差的话，每天下班后时间就比较充裕了，于是我就带上了书，每天下班回到酒店，就开始搞 Spring Boot。</p><p>一开始我就发现这玩意相比我大学时候搞得 XML 配置的 SSM 太好用了，还是 SSM 那套东西，但是有了自动化配置，不用再去写让人头大的 XML 配置了，可以基于 Spring Boot 快速搞一个 SSM 应用出来。不过刚开始学的时候我还不知道 Spring Boot 在 Java 领域如此火爆，当我写了几篇博客之后，我发现每篇博客的阅读量都暴涨，远远高于其他博客的阅读，我隐隐约约感觉到这次稀里糊涂的技术栈切换，算是没走错路。</p><p>不过老实说，Spring Boot 技术栈其实不算难，都是 SSM 那一套东西，只是多了自动化配置（当然，Spring Boot 也有不少自己的东西，不过整体上基于 SSM 这点应该没啥争议），我刚开始搞 Spring Boot 的时候，有时候会有一些东西看的云里雾里，后来发现问题出在 Spring + SpringMVC 上，好几年不写 JavaEE，这些东西有一点点生疏了，后来又花了一些时间把 SSM 这些东西系统过了一遍，然后再去看 Spring Boot 就顺畅多了。</p><p>所以有一些小伙伴问松哥能不能跳过 SSM 直接学习 Spring Boot，这个我不建议，大家在 Spring Boot 中见到的很多神奇的自动化配置大部分都是基于 Spring 现有功能实现的，要是不懂实现原理，你会发现 Spring Boot 用得时候虽然好用，但是出了问题，你就束手无策了。</p><p>就这样，跳入了 Spring Boot 的坑里了。Spring Boot 学完没多久，工作上，马上要从 Android 切换到 JavaEE 了，亟需一个项目练练手，当时我的上司给我介绍了一个西藏大学的项目，我使用 Spring Boot+EasyUI 的技术栈花了不到一个礼拜做完了，从此就算是叩开了 JavaEE 的大门，那会是 2017 年。</p><p>当时前端选择 EasyUI 也是没办法，甲方催得紧，而我来不及搞其他的前端框架，当时只有 EasyUI 熟悉一些，不用花时间学，直接就能用，于是就选择了 EasyUI，但是 EasyUI 太丑了，所以在做完西藏大学的项目后，我就一直思量着再整一个专业的前端框架，这样以后再有私活，我就可以独立做出来一个好看的后端管理系统了。</p><p>就这样，在综合对比了 Vue、React 以及 Angular 之后，决定跳入 Vue 的坑。</p><h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h2><p>前端其实还算接触的比较早，最早的 jQuery Mobile，PhoneGap 上大学的时候就玩过，我的第一本 NodeJS 的书是在 2013 年买的，那个时候 NodeJS 还算是一个比较新的事物。当我还是一名 Android 工程师的时候，我就玩过 React 和 ReactNative，RN 是当时比较流行的一个跨平台解决方案。但是在我比较这三个技术栈的时候，我发现 Vue 更加好用，生态也更加丰富，而且大有超过 React 的架势（当时 Vue 在 GitHub 上的 star 数还没超过 React），于是我就选择了 Vue。其实当时我心里想，大不了学完 Vue 再学 React，反正我才刚毕业两年多，没必要这么早就锁定技术栈停止学习。</p><p>Vue 的学习确实不费啥事，花了两三天时间刷了一遍官网，然后就开始做项目，但是要去深入学习，又是一个漫长的过程了。</p><p>Vue 有很多漂亮的 UI 库，像 ElementUI 等都算是做的比较好的，这些东西只要会用其中一个，其他的就可以手到擒来。</p><p>到 2018 年初，Spring Boot+Vue 技术栈基本上已经熟悉了，两个开源项目 V 部落(<a href="https://mp.weixin.qq.com/s/VRzcunh9flTJ_EZSBJrfYw" target="_blank" rel="noopener">V 部落</a>)和微人事(<a href="https://mp.weixin.qq.com/s/yr24hKXQdXBivGSTCRUufg" target="_blank" rel="noopener">视频揭秘微人事项目实现过程</a>)也受到小伙伴们的欢迎，常规的企业级应用可以一个人独立完成了，5 月份的时候，经朋友介绍，接了哈尔滨工程大学一位老师的项目，毫无疑问我就使用了最擅长的 Spring Boot+Vue 技术栈来做了，前后端都是自己做，没人扯皮，美滋滋。</p><p>再后来，就是写书（<a href="https://mp.weixin.qq.com/s/IJZukUhu-Rec8lF9KQseoQ" target="_blank" rel="noopener">我的第一本书，被选作大学教材了！</a>），业余继续搞点项目用 Spring Boot + Vue 来做，这些以前都和大家聊过我就不再多说了，业余接点项目来做这块倒是有一些经验，以后和小伙伴们细聊。</p><p>就这样，没有任何人的指引，我慢慢构建了 Spring Boot + Vue 这套技术体系，这个过程中，<strong>最大的学习经验就是要写博客，做笔记，写博客不仅仅是记录，也是总结提炼，在写的过程中，融入自己的思考，加深对技术的理解。</strong> 掌握了这套技术栈之后，我觉得我离全栈又更近了一步，离赚钱不受工作地点的限制这个目标也更近一步了。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>有前辈大佬的指引，你可能走得快，自己摸索，走的踏实。其实从我第一天自学 Java 开始，基本上都是一直在摸索。大学时候一个 BUG 折腾两三天才解决，但是一旦自己想明白解决了，以后类似的错误不会再犯，这是我的感受。</p><p>好了，一点点学习经验，和小伙伴们分享，要是觉得有启发，欢迎转发哦。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前两天又有小伙伴私信松哥，问题还是职业规划，Java 技术栈路线这种，实际上对于这一类问题我经常不太敢回答，每个人的情况都不太一样，而小伙伴也很少详细介绍自己的情况，大都是一两句话就把问题抛出来了，啥情况都不了解，就要指出一个方向，这实在是太难了。&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://www.javaboy.org/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="生活" scheme="http://www.javaboy.org/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>快来，松哥的免费资源库更新啦</title>
    <link href="http://www.javaboy.org/2019/1112/java-video.html"/>
    <id>http://www.javaboy.org/2019/1112/java-video.html</id>
    <published>2019-11-12T01:51:36.000Z</published>
    <updated>2019-11-20T02:02:52.952Z</updated>
    
    <content type="html"><![CDATA[<p>今年 5 月份的时候，松哥发了一个视频资源库，当时和大家说，这个资源库会定期更新，后来却迟迟未更新，其实不是我没资源了，是因为当时的关键字是我一个一个在微信后台配置的，配置到后面发现，后台配置关键字有数量上限，没法继续配置了，所以这事就搁置下来了。</p><a id="more"></a><p>九月份松哥上线了自己的服务，和微信的后台对接起来，具体实现大家可以参考这两篇文章：</p><ul><li><a href="https://mp.weixin.qq.com/s/f3QexxLp9vT6aE1Pl3jHGw" target="_blank" rel="noopener">Spring Boot 开发微信公众号后台</a></li><li><a href="https://mp.weixin.qq.com/s/1jTl9kBeFeibjbe5EbsCzg" target="_blank" rel="noopener">Spring Boot 如何给微信公众号返回消息</a></li></ul><p>现在再配置关键字就没有限制了。于是最近抽空把资源更新了一波，废话不多说，大家在公众号【江南一点雨】后台回复相应的口令，就可以获取相应的视频下载地址。</p><h2 id="Java-基础"><a href="#Java-基础" class="headerlink" title="Java 基础"></a>Java 基础</h2><table><thead><tr><th style="text-align:left">资源名称</th><th>口令</th></tr></thead><tbody><tr><td style="text-align:left">Java 基础语法</td><td>javaboy4096</td></tr><tr><td style="text-align:left">Java 面向对象</td><td>javaboy6148</td></tr><tr><td style="text-align:left">JavaSE 飞机大战项目</td><td>javaboy2053</td></tr><tr><td style="text-align:left">深入面向对象和数组</td><td>javaboy8200</td></tr><tr><td style="text-align:left">Java 常用类详解</td><td>javaboy4105</td></tr><tr><td style="text-align:left">Java 异常机制解析</td><td>javaboy6157</td></tr><tr><td style="text-align:left">Java 集合与数据结构</td><td>javaboy2062</td></tr><tr><td style="text-align:left">JavaIO 流全解析</td><td>javaboy8209</td></tr><tr><td style="text-align:left">深入理解 Java 多线程</td><td>javaboy4114</td></tr><tr><td style="text-align:left">Java 网络编程</td><td>javaboy6166</td></tr><tr><td style="text-align:left">手动开发一个 Web 服务器</td><td>javaboy2071</td></tr><tr><td style="text-align:left">深入理解 Java 注解+反射</td><td>javaboy8218</td></tr><tr><td style="text-align:left">Java23 种设计模式</td><td>javaboy4123</td></tr><tr><td style="text-align:left">学会 Java 正则表达式</td><td>javaboy6175</td></tr><tr><td style="text-align:left">JDBC 详解</td><td>javaboy2080</td></tr><tr><td style="text-align:left">独立开发 SORM 框架</td><td>javaboy8227</td></tr><tr><td style="text-align:left">快人一步，Java10 新特性全解析</td><td>javaboy4132</td></tr><tr><td style="text-align:left">Java 数据结构和算法</td><td>javaboy6184</td></tr><tr><td style="text-align:left">深入理解 Java 虚拟机</td><td>javaboy2089</td></tr><tr><td style="text-align:left">Java 解析XML文件</td><td>javaboy8236</td></tr></tbody></table><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><table><thead><tr><th style="text-align:left">资源名称</th><th>口令</th></tr></thead><tbody><tr><td style="text-align:left">Oracle 数据库安装及简单 SQL</td><td>javaboy4141</td></tr><tr><td style="text-align:left">Oracle 账户管理及查询语句</td><td>javaboy6193</td></tr><tr><td style="text-align:left">Oracle 中的函数</td><td>javaboy2098</td></tr><tr><td style="text-align:left">Oracle 中的子查询</td><td>javaboy8245</td></tr><tr><td style="text-align:left">Oracle 中常见的表操作</td><td>javaboy4150</td></tr><tr><td style="text-align:left">Oracle 中的数据备份</td><td>javaboy6202</td></tr><tr><td style="text-align:left">MySQL 基础</td><td>javaboy2107</td></tr><tr><td style="text-align:left">PowerDesigner 教程</td><td>javaboy8254</td></tr><tr><td style="text-align:left">JDBC 操作数据库</td><td>javaboy4159</td></tr><tr><td style="text-align:left">MySQL 优化</td><td>javaboy6211</td></tr><tr><td style="text-align:left">Oracle 高级课程</td><td>javaboy2116</td></tr><tr><td style="text-align:left">数据库与 SQL 优化</td><td>javaboy6283</td></tr><tr><td style="text-align:left">数据库集群与高并发</td><td>javaboy2188</td></tr></tbody></table><h2 id="Web-基础"><a href="#Web-基础" class="headerlink" title="Web 基础"></a>Web 基础</h2><table><thead><tr><th style="text-align:left">资源名称</th><th>口令</th></tr></thead><tbody><tr><td style="text-align:left">HTML 入门教程</td><td>javaboy8263</td></tr><tr><td style="text-align:left">CSS 教程</td><td>javaboy4168</td></tr><tr><td style="text-align:left">JavaScript 视频教程</td><td>javaboy6220</td></tr><tr><td style="text-align:left">jQuery 视频教程</td><td>javaboy2125</td></tr><tr><td style="text-align:left">EasyUI 视频教程</td><td>javaboy8272</td></tr><tr><td style="text-align:left">Servlet 基础</td><td>javaboy4177</td></tr><tr><td style="text-align:left">Servlet 中的 Request 和 Response</td><td>javaboy6229</td></tr><tr><td style="text-align:left">Servlet 请求转发与重定向</td><td>javaboy2134</td></tr><tr><td style="text-align:left">Session 和 Cookie</td><td>javaboy8281</td></tr><tr><td style="text-align:left">JSP 详解</td><td>javaboy4186</td></tr><tr><td style="text-align:left">用户管理系统实战</td><td>javaboy6238</td></tr><tr><td style="text-align:left">Ajax 详解</td><td>javaboy2143</td></tr><tr><td style="text-align:left">EL 和 JSTL</td><td>javaboy8290</td></tr><tr><td style="text-align:left">过滤器详解</td><td>javaboy4195</td></tr><tr><td style="text-align:left">监听器详解</td><td>javaboy6247</td></tr><tr><td style="text-align:left">KnockoutJS 实战视频</td><td>javaboy2152</td></tr></tbody></table><h2 id="Java-高级"><a href="#Java-高级" class="headerlink" title="Java 高级"></a>Java 高级</h2><table><thead><tr><th style="text-align:left">资源名称</th><th>口令</th></tr></thead><tbody><tr><td style="text-align:left">IntelliJIDEA 视频教程</td><td>javaboy4285</td></tr><tr><td style="text-align:left">Java 高并发秒杀方案</td><td>javaboy8299</td></tr><tr><td style="text-align:left">Activiti 工作流实战解析</td><td>javaboy4204</td></tr><tr><td style="text-align:left">Java 并发编程与高并发实战</td><td>javaboy6256</td></tr><tr><td style="text-align:left">Linux 快速入门</td><td>javaboy2161</td></tr><tr><td style="text-align:left">Maven 详解</td><td>javaboy8308</td></tr><tr><td style="text-align:left">Git 应用详解</td><td>javaboy4213</td></tr><tr><td style="text-align:left">Svn 入门教程</td><td>javaboy6265</td></tr><tr><td style="text-align:left">高并发编程与线程池</td><td>javaboy2170</td></tr><tr><td style="text-align:left">系统优化与 JVM 调优</td><td>javaboy8317</td></tr><tr><td style="text-align:left">Java 编程规范</td><td>javaboy4222</td></tr><tr><td style="text-align:left">AIO、BIO、NIO 详解</td><td>javaboy6274</td></tr><tr><td style="text-align:left">Netty 高级视频教程</td><td>javaboy2179</td></tr><tr><td style="text-align:left">ActiveMQ 消息中间详解</td><td>javaboy8326</td></tr><tr><td style="text-align:left">单点登录视频教程</td><td>javaboy4231</td></tr><tr><td style="text-align:left">Dubbo 详解</td><td>javaboy8335</td></tr><tr><td style="text-align:left">Redis 全解析</td><td>javaboy4240</td></tr><tr><td style="text-align:left">VSFTPD+NGINX 视频教程</td><td>javaboy6292</td></tr><tr><td style="text-align:left">MyBatis 视频教程</td><td>javaboy2197</td></tr><tr><td style="text-align:left">Spring4 视频教程</td><td>javaboy8344</td></tr><tr><td style="text-align:left">SpringMVC 视频教程</td><td>javaboy4249</td></tr><tr><td style="text-align:left">SSM 框架整合视频教程</td><td>javaboy6301</td></tr><tr><td style="text-align:left">RBAC 权限控制视频教程</td><td>javaboy2206</td></tr><tr><td style="text-align:left">Hibernate4 视频教程</td><td>javaboy8353</td></tr><tr><td style="text-align:left">Jfinal 视频教程</td><td>javaboy4258</td></tr><tr><td style="text-align:left">Shiro 视频教程</td><td>javaboy6310</td></tr><tr><td style="text-align:left">Solr 视频教程</td><td>javaboy2215</td></tr><tr><td style="text-align:left">Struts2 视频教程</td><td>javaboy8362</td></tr><tr><td style="text-align:left">Nginx 视频教程</td><td>javaboy4267</td></tr><tr><td style="text-align:left">Redis 缓存详解</td><td>javaboy6319</td></tr><tr><td style="text-align:left">JVM 虚拟机优化</td><td>javaboy2224</td></tr><tr><td style="text-align:left">Zookeeper 详解视频</td><td>javaboy8371</td></tr><tr><td style="text-align:left">Linux 基本操作</td><td>javaboy6328</td></tr><tr><td style="text-align:left">架构师面试攻略（文档）</td><td>javaboy2233</td></tr><tr><td style="text-align:left">架构师面试攻略（视频）</td><td>javaboy8380</td></tr><tr><td style="text-align:left">JUC 视频教程</td><td>javaboy6400</td></tr><tr><td style="text-align:left">MySQL 高级教程</td><td>javaboy2305</td></tr><tr><td style="text-align:left">Java 邮件开发教程</td><td>javaboy8452</td></tr><tr><td style="text-align:left">Maven 实战视频</td><td>javaboy8443</td></tr><tr><td style="text-align:left">自己 DIY 一个 Tomcat</td><td>javaboy4339</td></tr></tbody></table><h2 id="大前端"><a href="#大前端" class="headerlink" title="大前端"></a>大前端</h2><table><thead><tr><th style="text-align:left">资源名称</th><th>口令</th></tr></thead><tbody><tr><td style="text-align:left">HTML5 新特性</td><td>javaboy4276</td></tr><tr><td style="text-align:left">AngularJS 视频教程</td><td>javaboy6337</td></tr><tr><td style="text-align:left">Grunt 视频教程</td><td>javaboy2242</td></tr><tr><td style="text-align:left">Gulp 视频教程</td><td>javaboy8389</td></tr><tr><td style="text-align:left">Webpack 视频教程</td><td>javaboy4294</td></tr><tr><td style="text-align:left">Bootstrap 视频教程</td><td>javaboy6346</td></tr><tr><td style="text-align:left">CSS3 视频教程</td><td>javaboy2251</td></tr><tr><td style="text-align:left">ES6 视频教程</td><td>javaboy8398</td></tr><tr><td style="text-align:left">HTML5 核心技术</td><td>javaboy4303</td></tr><tr><td style="text-align:left">HTML5 实战</td><td>javaboy6355</td></tr><tr><td style="text-align:left">HTML5 项目实战</td><td>javaboy2260</td></tr><tr><td style="text-align:left">JS 模块化视频教程</td><td>javaboy8407</td></tr><tr><td style="text-align:left">less 视频教程</td><td>javaboy4312</td></tr><tr><td style="text-align:left">NodeJS 视频教程</td><td>javaboy6364</td></tr><tr><td style="text-align:left">React 视频教程</td><td>javaboy2269</td></tr><tr><td style="text-align:left">Zepto 视频教程</td><td>javaboy8416</td></tr><tr><td style="text-align:left">HTML+CSS 实战视频</td><td>javaboy4321</td></tr><tr><td style="text-align:left">JavaScript140 集</td><td>javaboy6373</td></tr><tr><td style="text-align:left">jQuery 视频教程</td><td>javaboy2278</td></tr><tr><td style="text-align:left">JavaScript 高级语法视频教程</td><td>javaboy8425</td></tr><tr><td style="text-align:left">Vue 项目实战视频</td><td>javaboy4330</td></tr><tr><td style="text-align:left">CSS3 特效实战</td><td>javaboy6382</td></tr><tr><td style="text-align:left">HTML5 特效实战</td><td>javaboy2287</td></tr><tr><td style="text-align:left">HTML5+Canvas 实现刮刮卡</td><td>javaboy8434</td></tr><tr><td style="text-align:left">Gradle 从入门到精通</td><td>javaboy6391</td></tr><tr><td style="text-align:left">mpvue 项目实战</td><td>javaboy2296</td></tr><tr><td style="text-align:left">Vue 最新最全视频教程</td><td>javaboy4348</td></tr></tbody></table><h2 id="大数据"><a href="#大数据" class="headerlink" title="大数据"></a>大数据</h2><table><thead><tr><th style="text-align:left">资源名称</th><th>口令</th></tr></thead><tbody><tr><td style="text-align:left">Linux 操作系统</td><td>javaboy4357</td></tr><tr><td style="text-align:left">Linux 基本命令</td><td>javaboy6409</td></tr><tr><td style="text-align:left">Linux 文件安装</td><td>javaboy2314</td></tr><tr><td style="text-align:left">Shell 编程</td><td>javaboy8461</td></tr><tr><td style="text-align:left">网络基础知识</td><td>javaboy4366</td></tr><tr><td style="text-align:left">LVS 集群与高并发</td><td>javaboy6418</td></tr><tr><td style="text-align:left">Nginx 和高并发</td><td>javaboy2323</td></tr><tr><td style="text-align:left">keepalive 和单点故障</td><td>javaboy8470</td></tr><tr><td style="text-align:left">HDFS 分布式文件系统</td><td>javaboy4375</td></tr><tr><td style="text-align:left">mapreduce 分布式计算</td><td>javaboy6427</td></tr><tr><td style="text-align:left">YARN 资源管理与任务调度</td><td>javaboy2332</td></tr><tr><td style="text-align:left">mapreduce 计算案例</td><td>javaboy8479</td></tr><tr><td style="text-align:left">HIVE 视频教程</td><td>javaboy4384</td></tr><tr><td style="text-align:left">Hbase 数据库详解</td><td>javaboy6436</td></tr><tr><td style="text-align:left">zookeeper 协同处理</td><td>javaboy2341</td></tr><tr><td style="text-align:left">CDH 使用</td><td>javaboy8488</td></tr><tr><td style="text-align:left">HUE 使用</td><td>javaboy4393</td></tr><tr><td style="text-align:left">IMPALA 详解</td><td>javaboy6445</td></tr><tr><td style="text-align:left">oozie 详解</td><td>javaboy2350</td></tr><tr><td style="text-align:left">elasticsearch 详解</td><td>javaboy8497</td></tr><tr><td style="text-align:left">Redis 内存数据</td><td>javaboy4402</td></tr><tr><td style="text-align:left">Scala 入门</td><td>javaboy6454</td></tr><tr><td style="text-align:left">Spark 详解</td><td>javaboy2359</td></tr><tr><td style="text-align:left">Spark 高级</td><td>javaboy8506</td></tr><tr><td style="text-align:left">Spark-Stream 流式计算</td><td>javaboy4411</td></tr><tr><td style="text-align:left">Kafka 分布式消息队列</td><td>javaboy6463</td></tr><tr><td style="text-align:left">STORM 流式计算框架</td><td>javaboy2368</td></tr><tr><td style="text-align:left">Python 语言基础</td><td>javaboy8515</td></tr><tr><td style="text-align:left">回归算法</td><td>javaboy4420</td></tr><tr><td style="text-align:left">分类算法、决策树</td><td>javaboy6472</td></tr><tr><td style="text-align:left">聚类算法、微博案例</td><td>javaboy2377</td></tr><tr><td style="text-align:left">推荐算法</td><td>javaboy8524</td></tr><tr><td style="text-align:left">大型电商日志分析（项目实战）</td><td>javaboy4429</td></tr><tr><td style="text-align:left">智慧交通（项目实战）</td><td>javaboy6481</td></tr><tr><td style="text-align:left">智能 App（项目实战）</td><td>javaboy2386</td></tr></tbody></table><h2 id="人工智能"><a href="#人工智能" class="headerlink" title="人工智能"></a>人工智能</h2><table><thead><tr><th style="text-align:left">资源名称</th><th>口令</th></tr></thead><tbody><tr><td style="text-align:left">人工智能入门</td><td>javaboy8533</td></tr><tr><td style="text-align:left">线性回归深入与代码实现</td><td>javaboy4438</td></tr><tr><td style="text-align:left">梯度下降算发实现</td><td>javaboy6490</td></tr><tr><td style="text-align:left">逻辑回归详解和应用</td><td>javaboy2395</td></tr><tr><td style="text-align:left">分类项目案例与神经网络算法</td><td>javaboy8542</td></tr><tr><td style="text-align:left">多分类、决策树分类与随机森林分类</td><td>javaboy4447</td></tr><tr><td style="text-align:left">分类评估与聚类</td><td>javaboy6499</td></tr><tr><td style="text-align:left">密度聚类与谱聚类</td><td>javaboy2404</td></tr><tr><td style="text-align:left">Tensorflow 安装并实现线性回归</td><td>javaboy8551</td></tr><tr><td style="text-align:left">TensorFlow 深入、TensorFlow可视化</td><td>javaboy4456</td></tr><tr><td style="text-align:left">DNN 深度神经网络手写图片识别</td><td>javaboy6508</td></tr><tr><td style="text-align:left">TensorBoard 可视化</td><td>javaboy2413</td></tr><tr><td style="text-align:left">卷积神经网络、CNN 识别图片</td><td>javaboy8560</td></tr><tr><td style="text-align:left">卷积神经网络深入，AlexNet 模型实现</td><td>javaboy4465</td></tr><tr><td style="text-align:left">Keras 深度学习框架</td><td>javaboy6517</td></tr></tbody></table><h2 id="分布式相关"><a href="#分布式相关" class="headerlink" title="分布式相关"></a>分布式相关</h2><table><thead><tr><th style="text-align:left">资源名称</th><th>口令</th></tr></thead><tbody><tr><td style="text-align:left">ZooKeeper 简介</td><td>javaboy2422</td></tr><tr><td style="text-align:left">ZooKeeper 安装</td><td>javaboy8569</td></tr><tr><td style="text-align:left">ZooKeeper 基本数据模型</td><td>javaboy4474</td></tr><tr><td style="text-align:left">基于 Linux 的 ZK 客户端命令</td><td>javaboy6526</td></tr><tr><td style="text-align:left">选举模式和 ZK 集群安装</td><td>javaboy2431</td></tr><tr><td style="text-align:left">JavaAPI 操作 ZK</td><td>javaboy8578</td></tr><tr><td style="text-align:left">ApacheCurator 客户端</td><td>javaboy4483</td></tr><tr><td style="text-align:left">Dubbo 入门到重构服务</td><td>javaboy6535</td></tr><tr><td style="text-align:left">分布式锁</td><td>javaboy2440</td></tr><tr><td style="text-align:left">Zookeeper 总结</td><td>javaboy8587</td></tr></tbody></table><h2 id="项目实战"><a href="#项目实战" class="headerlink" title="项目实战"></a>项目实战</h2><table><thead><tr><th style="text-align:left">资源名称</th><th>口令</th></tr></thead><tbody><tr><td style="text-align:left">OA 办公自动化项目1</td><td>javaboy4492</td></tr><tr><td style="text-align:left">OA 办公自动化项目2</td><td>javaboy6544</td></tr><tr><td style="text-align:left">OA 办公自动化项目3</td><td>javaboy2449</td></tr><tr><td style="text-align:left">OA 办公自动化项目4</td><td>javaboy8596</td></tr><tr><td style="text-align:left">备锋客户关系管理(CRM)系统</td><td>javaboy4501</td></tr><tr><td style="text-align:left">百战客户关系管理系统</td><td>javaboy6553</td></tr><tr><td style="text-align:left">宅急送项目</td><td>javaboy2458</td></tr><tr><td style="text-align:left">高仿人人网项目</td><td>javaboy8605</td></tr><tr><td style="text-align:left">Java 邮件开发项目</td><td>javaboy4510</td></tr><tr><td style="text-align:left">在线支付实战视频</td><td>javaboy6562</td></tr><tr><td style="text-align:left">俄罗斯方块游戏实战</td><td>javaboy2467</td></tr><tr><td style="text-align:left">贪吃蛇视频教程</td><td>javaboy8614</td></tr><tr><td style="text-align:left">交通灯管理系统</td><td>javaboy4519</td></tr><tr><td style="text-align:left">银行业务调度系统实战</td><td>javaboy6571</td></tr><tr><td style="text-align:left">供应链系统实战视频</td><td>javaboy2476</td></tr><tr><td style="text-align:left">网上商城项目实战</td><td>javaboy8623</td></tr><tr><td style="text-align:left">医药采购平台管理系统</td><td>javaboy4528</td></tr><tr><td style="text-align:left">点餐系统实战</td><td>javaboy6580</td></tr><tr><td style="text-align:left">杰信商贸 SSM 版</td><td>javaboy2485</td></tr><tr><td style="text-align:left">国家税务协同平台项目</td><td>javaboy8632</td></tr><tr><td style="text-align:left">javaWeb 聊天室</td><td>javaboy4537</td></tr><tr><td style="text-align:left">网上书店</td><td>javaboy6589</td></tr><tr><td style="text-align:left">手机进销存系统</td><td>javaboy2494</td></tr><tr><td style="text-align:left">QQ 聊天器</td><td>javaboy8641</td></tr><tr><td style="text-align:left">ERP 项目</td><td>javaboy4546</td></tr><tr><td style="text-align:left">坦克大战</td><td>javaboy6598</td></tr><tr><td style="text-align:left">五子棋游戏</td><td>javaboy2503</td></tr><tr><td style="text-align:left">报名系统 Activity</td><td>javaboy8650</td></tr><tr><td style="text-align:left">OA 供应链系统</td><td>javaboy4555</td></tr><tr><td style="text-align:left">用户管理系统</td><td>javaboy6607</td></tr><tr><td style="text-align:left">JavaWeb 图书商城</td><td>javaboy2512</td></tr><tr><td style="text-align:left">VIP 商场</td><td>javaboy8659</td></tr><tr><td style="text-align:left">企业招聘系统</td><td>javaboy4564</td></tr><tr><td style="text-align:left">博客系统项目</td><td>javaboy6616</td></tr><tr><td style="text-align:left">超级玛丽</td><td>javaboy2521</td></tr><tr><td style="text-align:left">成绩管理系统</td><td>javaboy8668</td></tr><tr><td style="text-align:left">个人理财系统</td><td>javaboy4573</td></tr><tr><td style="text-align:left">人事管理系统</td><td>javaboy6625</td></tr><tr><td style="text-align:left">JBPM 采购申请系统</td><td>javaboy2530</td></tr><tr><td style="text-align:left">电子商务网站</td><td>javaboy8677</td></tr><tr><td style="text-align:left">跨平台 App 开发</td><td>javaboy4582</td></tr></tbody></table><h2 id="文档资源"><a href="#文档资源" class="headerlink" title="文档资源"></a>文档资源</h2><table><thead><tr><th style="text-align:left">资源名称</th><th>口令</th></tr></thead><tbody><tr><td style="text-align:left">Docker 教程</td><td>docker</td></tr><tr><td style="text-align:left">Redis 教程</td><td>redis</td></tr><tr><td style="text-align:left">RocketMQ 教程</td><td>rocketmq</td></tr><tr><td style="text-align:left">Java8 新特性文档</td><td>java8</td></tr><tr><td style="text-align:left">设计模式教程</td><td>设计模式</td></tr><tr><td style="text-align:left">网络协议教程</td><td>网络</td></tr><tr><td style="text-align:left">netty 教程</td><td>netty</td></tr><tr><td style="text-align:left">web 全栈指南</td><td>web全栈</td></tr></tbody></table><p><strong>好了，本次就先更新这么多，如果这里没有你想要的，也也可以留言说说你需要的资料，松哥会及时更新资源哦。</strong> 另外，大家在公众号后台回复 <strong>资源</strong> ，也可以获取本文电子版。</p><p><img src="http://www.javaboy.org/images/other/86-1.png" alt></p><p>如果这些资源帮助到你了，欢迎转发给更多小伙伴哦。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今年 5 月份的时候，松哥发了一个视频资源库，当时和大家说，这个资源库会定期更新，后来却迟迟未更新，其实不是我没资源了，是因为当时的关键字是我一个一个在微信后台配置的，配置到后面发现，后台配置关键字有数量上限，没法继续配置了，所以这事就搁置下来了。&lt;/p&gt;
    
    </summary>
    
      <category term="学习资源" scheme="http://www.javaboy.org/categories/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/"/>
    
    
      <category term="学习资源" scheme="http://www.javaboy.org/tags/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>还在用 Dockerfile 部署 Spring Boot？out 啦！试试谷歌的大杀器 Jib</title>
    <link href="http://www.javaboy.org/2019/1107/docker-springboot.html"/>
    <id>http://www.javaboy.org/2019/1107/docker-springboot.html</id>
    <published>2019-11-07T02:33:35.000Z</published>
    <updated>2019-11-20T03:02:33.010Z</updated>
    
    <content type="html"><![CDATA[<p>之前松哥和大家分享过一篇将 Spring Boot 项目部署到远程 Docker 上的文章：</p><a id="more"></a><ul><li><a href="https://mp.weixin.qq.com/s/vSCQLvQBYMYoPhdlO2v3XA" target="_blank" rel="noopener">一键部署 Spring Boot 到远程 Docker 容器</a></li></ul><p>但是这种部署有一个问题，就是一个小小的 helloworld 构建成镜像之后，竟然都有 660 MB+，这就有点过分了；而且这种方式步骤繁琐，很多人看了头大。</p><p>因此松哥今天想再和大家聊一聊另外一种方案 <strong>Jib</strong>，这是谷歌开源的一个容器化运行方案，使用它我们将 Spring Boot 进行容器化部署只要两步：</p><ul><li>第一步配置 Maven Plugin</li><li>第二步构建</li></ul><p>我们一起来看看。</p><h2 id="Jib"><a href="#Jib" class="headerlink" title="Jib"></a>Jib</h2><p>在之前那篇文章中，我们将 Spring Boot 项目进行容器化部署，要求开发人员要有一定的 Docker 技能作为支撑，然而在实际开发中，并非每个人都是 Docker 专家，或者说会用 Docker。</p><p>有鉴于此，Google 搞出来一个 Jib，使 Spring Boot 容器化部署变得更加简便，开发人员可以不需要任何 Docker 相关的技能，就能将 Spring Boot 项目构建成 Docker 中的镜像，而且还可以“顺便”将镜像 push 到 register 上，极大的简化了部署过程。</p><p>Jib 使用 Java 开发，使用也非常简单，可以作为 Maven 或者 Gradle 的插件直接集成到我们的项目中。它利用镜像分层和注册表缓存来实现快速、增量的构建。Jib 会自动读取项目的构建配置，代码组织到不同的层（依赖项、资源、类）中，然后它只会重新构建和推送发生变更的层。在项目进行快速迭代时，Jib 只将发生变更的层推送到 registers 来缩短构建时间。</p><p>好了，大致了解了 Jib 之后，接下来我们来看看 Jib 要怎么使用。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>Jib 可以直接将构建好的镜像 push 到 registers 上，如果公司有自己的私有镜像站的话，可以直接推送到私有镜像站上，本文我就将构建好的镜像推送到官方的 Docker Hub 上，因此需要大家提前准备一个 Docker Hub 的账号，账号大家可以直接去 Docker Hub 上面注册（<a href="https://hub.docker.com/" target="_blank" rel="noopener">https://hub.docker.com/</a>），大家要是对 Docker Hub 这些东西不了解，可以在公众号后台回复 docker，获取松哥自制的 Docker 教程。</p><h2 id="牛刀小试"><a href="#牛刀小试" class="headerlink" title="牛刀小试"></a>牛刀小试</h2><p>首先我们来创建一个 Spring Boot 工程，创建时只需要添加一个 Web 依赖即可：</p><p><img src="http://www.javaboy.org/images/boot/46-1.png" alt></p><p>项目创建成功后，添加一个 HelloController 用来做测试：</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">@RestController</span></span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="hljs-meta">@GetMapping</span>(<span class="hljs-string">"/hello"</span>)</span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">hello</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-string">"hello jib"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，在 pom.xml 中添加上 Jib 的插件，如下：</p><figure class="highlight xml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.google.cloud.tools<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jib-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.7.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">from</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;<span class="hljs-name">image</span>&gt;</span>openjdk:alpine<span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;/<span class="hljs-name">from</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">to</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;<span class="hljs-name">image</span>&gt;</span>docker.io/wongsung/dockerjib<span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;<span class="hljs-name">tags</span>&gt;</span></span><br><span class="line">                <span class="hljs-tag">&lt;<span class="hljs-name">tag</span>&gt;</span>v1<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;/<span class="hljs-name">tags</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;<span class="hljs-name">auth</span>&gt;</span></span><br><span class="line">                <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>wongsung<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span></span><br><span class="line">                <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>你的密码<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;/<span class="hljs-name">auth</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;/<span class="hljs-name">to</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">executions</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">execution</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;<span class="hljs-name">phase</span>&gt;</span>package<span class="hljs-tag">&lt;/<span class="hljs-name">phase</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;<span class="hljs-name">goals</span>&gt;</span></span><br><span class="line">                <span class="hljs-tag">&lt;<span class="hljs-name">goal</span>&gt;</span>build<span class="hljs-tag">&lt;/<span class="hljs-name">goal</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;/<span class="hljs-name">goals</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;/<span class="hljs-name">execution</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">executions</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p>关于这段配置，我说如下几点：</p><ol><li>首先就是版本号的问题，我这里使用的是 <code>1.7.0</code> ，网上有的教程比较老，用的 0.x 的版本，老的版本在配置 Docker 认证的时候非常麻烦，所以版本这块建议大家使用当前最新版。</li><li>from 中的配置表示本镜像构建所基于的根镜像为 <code>openjdk:alpine</code></li><li>to 中的配置表示本镜像构建完成后，要发布到哪里去，如果是发布到私有镜像站，就写自己私有镜像站的地址，如果是发布到 Docker Hub 上，就参考我这里的写法 <code>docker.io/wongsung/dockerjib</code>，其中 wongsung 表示你在 Docker Hub 上注册的用户名，dockerjib 表示你镜像的名字，可以随意取。</li><li>tags 中配置的是自己镜像的版本。</li><li>auth 中配置你在 Docker Hub 上的用户名/密码。</li><li>executions 节点中的就是常规配置了，我就不再多说了。</li></ol><p>配置完成后，在命令行执行如下命令将当前下项目构建成一个 Docker 镜像并 push 到 Docker Hub：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn compile jib:build</span><br></pre></td></tr></table></figure><p>构建完成后，我们在 Docker Hub 上就能看到自己的镜像了：</p><p><img src="http://www.javaboy.org/images/boot/46-2.png" alt></p><p>接下来，启动 Docker ，在 Docker 中执行如下命令拉取镜像下来并运行：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name mydockerjib -p 8080:8080 docker.io/wongsung/dockerjib:v1</span><br></pre></td></tr></table></figure><p>启动成功后，我们在浏览器中就可以直接访问我们刚才的 Spring Boot 项目中的 hello 接口了：</p><p><img src="http://www.javaboy.org/images/boot/46-3.png" alt></p><p>是不是很方便？比我第一次给大家介绍的方案要方便很多。</p><p><strong>注意</strong></p><p>这种方式是将项目构建成镜像后并 push 到 registers 上，这种构建方式不需要你本地安装 Docker，如果你需要在本地运行镜像，那当然需要 Docker，单纯的构建是不需要 Docker 环境的。</p><h2 id="本地构建"><a href="#本地构建" class="headerlink" title="本地构建"></a>本地构建</h2><p>如果你电脑本地刚好安装了 Docker ，有 Docker 环境，那么也可以将项目构建成本地 Docker 的镜像，</p><p>首先我们来查看一下本地镜像：</p><p><img src="http://www.javaboy.org/images/boot/46-4.png" alt></p><p>可以看到只有 MySQL 镜像，然后我们执行如下命令构建本地镜像：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn compile jib:dockerBuild</span><br></pre></td></tr></table></figure><p>看到如下构建日志信息表示构建成功：</p><p><img src="http://www.javaboy.org/images/boot/46-5.png" alt></p><p>构建完成后，我们再来看本地镜像：</p><p><img src="http://www.javaboy.org/images/boot/46-6.png" alt></p><p>可以都看到，已经构建成功了，接下来启动命令和上面一样，我就不重复展示了。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>容器的出现，让我们的 Java 程序比任何时候都接近“一次编写，到处运行”，Spring Boot 容器化部署也是越来越方便，后面有空松哥再和大家聊聊结合 jenkins 的用法，好了，本文的案例我已经上传到 GitHub：<a href="https://github.com/lenve/javaboy-code-samples，有问题欢迎留言讨论。" target="_blank" rel="noopener">https://github.com/lenve/javaboy-code-samples，有问题欢迎留言讨论。</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前松哥和大家分享过一篇将 Spring Boot 项目部署到远程 Docker 上的文章：&lt;/p&gt;
    
    </summary>
    
      <category term="Spring Boot" scheme="http://www.javaboy.org/categories/Spring-Boot/"/>
    
    
      <category term="Spring Boot" scheme="http://www.javaboy.org/tags/Spring-Boot/"/>
    
      <category term="Docker" scheme="http://www.javaboy.org/tags/Docker/"/>
    
  </entry>
  
</feed>
